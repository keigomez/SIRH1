
@model SIRH.Web.ViewModels.DetalleVacacionesVM
@{
    if (Model != null)
    {
        <br />
        <div id="formulario">
            <div class="card">
                <div class="card-header">
                    <strong>Información del Funcionario</strong>
                </div>
                <div class="card-body">
                    <table class="table table-hover">
                        <tr>
                            <td>
                                <strong>@Html.LabelFor(model => model.Funcionario.Cedula): </strong>@Html.DisplayFor(model => model.Funcionario.Cedula)
                                @Html.HiddenFor(model => model.Funcionario.Cedula)
                            </td>
                            <td>
                                <strong>@Html.LabelFor(model => model.Funcionario.Nombre): </strong>@Model.Funcionario.Nombre @Model.Funcionario.PrimerApellido @Model.Funcionario.SegundoApellido
                                @Html.HiddenFor(model => model.Funcionario.Nombre)
                                @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
                                @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
                            </td>
                            <td>
                                <strong>@Html.LabelFor(model => model.Puesto.CodPuesto): </strong>@Html.DisplayFor(model => model.Puesto.CodPuesto)
                                @Html.HiddenFor(model => model.Puesto.CodPuesto)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                            </td>
                            <td>
                                <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                            </td>
                            <td>
                                <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                            </td>
                            <td>
                                <strong>@Html.LabelFor(model => model.DetallePuesto.Especialidad.DesEspecialidad): </strong>@Html.DisplayFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                                @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                            </td>
                            <td>
                                <strong>@Html.LabelFor(model => model.DetallePuesto.Clase.DesClase): </strong>@Html.DisplayFor(model => model.DetallePuesto.Clase.DesClase)
                                @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <strong>Fecha de contratación: </strong>@Html.DisplayFor(model => model.DetalleContratacion.FechaIngreso)
                                @Html.HiddenFor(model => model.DetalleContratacion.FechaIngreso)
                            </td>
                            <td>
                                <strong>Fecha de vacaciones: </strong>@Model.DetalleContratacion.FechaVacaciones.ToShortDateString()
                                @Html.HiddenFor(model => model.DetalleContratacion.FechaVacaciones)
                            </td>
                            @if (Model.PeriodosActivos != null)
                            {
                                <td>
                                    <strong>Proporción mensual: </strong>@Model.PeriodosActivos[0].ProporcionMes
                                </td>
                            }
                            else
                            {
                                <td>
                                </td>
                            }
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                            @if (Model.PeriodosActivos != null)
                            {
                                <td>
                                    <strong>Proporción a la fecha: </strong>@Model.PeriodosActivos[0].Proporcion
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <br>
        <div id="tabs">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item">
                    <a id="tab1" class="nav-link active" href="#tabs-1" data-toggle="tab" role="tab" aria-controls="tabs-1" aria-selected="true">Periodos activos</a>
                </li>
                <li class="nav-item">
                    <a id="tab2" class="nav-link" href="#tabs-2" data-toggle="tab" role="tab" aria-controls="tabs-2" aria-selected="false">Periodos anulados</a>
                </li>
                <li class="nav-item">
                    <a id="tab3" class="nav-link" href="#tabs-3" data-toggle="tab" role="tab" aria-controls="tabs-3" aria-selected="false">Histórico Emulación</a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div id="tabs-1" class="tab-pane fade  show active" role="tabpanel" aria-labelledby="tab1">
                    @if (Model.PeriodosActivos != null)
                    {
                        <table class="table" id="tablaFacturas" style="margin-bottom:70px;">
                            <thead>
                                <tr>
                                    <th>Periodo</th>
                                    <th>Estado</th>
                                    <th>Fecha de carga</th>
                                    <th>Dias a derecho</th>
                                    <th>Saldo</th>
                                    <th> <!-- boton detalle--></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.PeriodosActivos.Count; i++)
                                {
                                    if (Model.PeriodosActivos[i].Estado == 1)
                                    {
                                        Model.estadoPeriodo = "Activo";
                                    }
                                    else
                                    if (Model.PeriodosActivos[i].Estado == 2)
                                    {
                                        Model.estadoPeriodo = "Vencido";
                                    }
                                    else
                                    if (Model.PeriodosActivos[i].Estado == 3)
                                    {
                                        Model.estadoPeriodo = "Anulado";
                                    }
                                    else
                                    {
                                        Model.estadoPeriodo = "Desconocido";
                                    }
                                    <tr class="omitir">
                                        <td class="border-bottom border-success">@Model.PeriodosActivos[i].Periodo</td>
                                        <td class="border-bottom border-success">@Model.estadoPeriodo</td>
                                        <td class="border-bottom border-success">@Model.PeriodosActivos[i].FechaCarga.ToShortDateString()</td>
                                        <td class="border-bottom border-success">@Model.PeriodosActivos[i].DiasDerecho</td>
                                        <td class="border-bottom border-success">@Model.PeriodosActivos[i].Saldo</td>
                                        <td class="border-bottom border-success">
                                            <a href="@Url.Action("Details", "Vacaciones", new
                                                {
                                                    cedula = Model.Funcionario.Cedula,
                                                    codPeriodo = Model.PeriodosActivos[i].Periodo,
                                                    codigo = Model.PeriodosActivos[i].IdEntidad

                                                })" class="btn btn-primary">
                                                                    <i class="fa fa-paperclip"></i> Detalles
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="alert alert-info">No se encontraron periodos activos para el funcionario</div>
                    }
                </div>
                <div id="tabs-2" class="tab-pane fade" role="tabpanel" aria-labelledby="tab2">
                @if (Model.PeriodosNoActivos != null)
                {
                    <table class="table" id="tablaFacturas" style="margin-bottom:70px;">
                        <thead>
                            <tr>
                                <th>Periodo</th>
                                <th>Estado</th>
                                <th>Fecha de carga</th>
                                <th>Dias a derecho</th>
                                <th>Saldo</th>
                                <th> <!-- boton detalle--></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.PeriodosNoActivos.Count; i++)
                            {
                                if (Model.PeriodosNoActivos[i].Estado == 1)
                                {
                                    Model.estadoPeriodo = "Activo";
                                }
                                else
                                   if (Model.PeriodosNoActivos[i].Estado == 2)
                                {
                                    Model.estadoPeriodo = "Vencido";
                                }
                                //else
                                //  if (Model.PeriodosNoActivos[i].Estado == 3 && Model.Funcionario.EstadoFuncionario.IdEntidad != 1 && Model.PeriodosNoActivos[i].Saldo > 0)
                                //{
                                //    Model.estadoPeriodo = "Activo";
                                //}
                                else
                                {
                                    if (Model.PeriodosNoActivos[i].Estado == 3)
                                    {
                                        Model.estadoPeriodo = "Anulado";
                                    }
                                    else
                                    {
                                        Model.estadoPeriodo = "Desconocido";
                                    }
                                }
                                <tr>
                                    <td class="border-bottom border-danger">@Model.PeriodosNoActivos[i].Periodo</td>
                                    <td class="border-bottom border-danger">@Model.estadoPeriodo</td>
                                    <td class="border-bottom border-danger">@Model.PeriodosNoActivos[i].FechaCarga.ToShortDateString()</td>
                                    <td class="border-bottom border-danger">@Model.PeriodosNoActivos[i].DiasDerecho</td>
                                    <td class="border-bottom border-danger">@Model.PeriodosNoActivos[i].Saldo</td>
                                    <td class="border-bottom border-danger">
                                        <a href="@Url.Action("Details", "Vacaciones", new
                                            {
                                                cedula = Model.Funcionario.Cedula,
                                                codPeriodo = Model.PeriodosNoActivos[i].Periodo,
                                                codigo = Model.PeriodosNoActivos[i].IdEntidad

                                            })" class="btn btn-primary">
                                            <i class="fa fa-paperclip"></i> Detalles
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-info">No se encontraron periodos anulados para el funcionario</div>
                }
                </div>
                <div id="tabs-3" class="tab-pane fade" role="tabpanel" aria-labelledby="tab3">
                    @if (Model.PeriodosEmulacion != null)
                    {
                        <table class="table" id="tablaFacturas" style="margin-bottom:70px;">
                            <thead>
                                <tr>
                                    <th>Periodo</th>
                                    <th class="text-center">Total de días registrados en el periodo</th>
                                    <th> <!-- boton detalle--></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.PeriodosEmulacion.Count; i++)
                                {
                                    <tr>
                                        <td class="border-bottom border-info">@Model.PeriodosEmulacion[i].Periodo</td>
                                        <td class="border-bottom border-info text-center">@Model.PeriodosEmulacion[i].Saldo</td>
                                        <td class="border-bottom border-info">
                                            <a href="@Url.Action("DetalleHistorial", "Vacaciones", new
                                            {
                                                cedula = Model.Funcionario.Cedula,
                                                periodo = Model.PeriodosEmulacion[i].Periodo

                                            })" class="btn btn-primary">
                                                <i class="fa fa-paperclip"></i> Detalles
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="alert alert-info">No se encontraron historiales de vacaciones en los respaldos de emulación para el funcionario</div>
                    }
                </div>
            </div>
        </div>

                        
        <br />
        <a class="btn btn-primary" href="javascript:history.back()" id="A5"><i class="fa fa-arrow-circle-left"></i> Regresar</a>
        @*<td class="border-bottom btn btn-success ">*@
            <a href="@Url.Action("ReporteFuncionario", "Vacaciones",  new
            {
                cedula = Model.Funcionario.Cedula

            })" class="btn btn-success">
                <i class="fa fa-file-text-o"></i> Generar PDF

            </a>
        @*</td>*@

    }
}
