@model SIRH.Web.ViewModels.DetallePuestoVM

@if (Model.Funcionario != null && Model.Puesto.EstadoPuesto.DesEstadoPuesto.Contains("PROPIEDAD"))
{
    <div class="alert alert-warning" role="alert">
        <i class="fa fa-warning d-inline" style="font-size:20px;"></i>
        @(Model.Funcionario.Mensaje)
    </div>
}

@using (Ajax.BeginForm("EditPuesto", "Puesto", new AjaxOptions
{
    HttpMethod = "Post",
    UpdateTargetId = "dvResultadoBusqueda",
    InsertionMode = InsertionMode.Replace,
    //OnSuccess = "",
    //OnComplete = "",
    //OnBegin = ""
}))
{
<div id="formulario">
    <div id="tabs">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a id="tab1" class="nav-link active" href="#tabs-1" data-toggle="tab" role="tab" aria-controls="tabs-1" aria-selected="true">Datos generales</a>
            </li>
            <li class="nav-item">
                <a id="tab2" class="nav-link" href="#tabs-2" data-toggle="tab" role="tab" aria-controls="tabs-2" aria-selected="false">Datos de ubicación</a>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div id="tabs-1" class="tab-pane fade  show active" role="tabpanel" aria-labelledby="tab1">
                <table class="table table-hover" id="datos_funcionario">
                    <thead class="thead-light">
                        <tr>
                            <th colspan="6">Información general</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><b>@Html.LabelFor(model => model.Puesto.CodPuesto)</b></td>
                            <td>
                                @Html.DisplayFor(model => model.Puesto.CodPuesto)
                                @Html.HiddenFor(model => model.Puesto.CodPuesto)
                            </td>
                            <td>
                            @if ((Model.Funcionario == null || !Model.Puesto.EstadoPuesto.DesEstadoPuesto.Contains("PROPIEDAD")))
                            {
                                <button type="button" class="btn btn-warning" id="DialogClase" title="Editar clase"><i class="fa fa-pencil-square-o"></i></button> 
                            }
                            <b>@Html.LabelFor(model => model.DetallePuesto.Clase.DesClase)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.DetallePuesto.Clase.DesClase, new { @class = "form-control", @id = "codclase", @readonly = false })
                                @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
                                @Html.HiddenFor(model => model.DetallePuesto.Clase.IdEntidad)
                            </td>
                        </tr>
                        <tr>
                            <td>
                            @if ((Model.Funcionario == null || !Model.Puesto.EstadoPuesto.DesEstadoPuesto.Contains("PROPIEDAD")))
                            {
                                <button type="button" class="btn btn-warning" id="DialogEspecialidad" title="Editar especialidad"><i class="fa fa-pencil-square-o"></i></button>
                            }
                            <b>@Html.LabelFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.DetallePuesto.Especialidad.DesEspecialidad, new { @class = "form-control", @id = "codespecialidad", @readonly = false })
                                @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                                @Html.HiddenFor(model => model.DetallePuesto.Especialidad.IdEntidad)
                            </td>
                            <td><button type="button" class="btn btn-warning" id="DialogSubespecialidad" title="Editar subespecialidad"><i class="fa fa-pencil-square-o"></i></button> <b>@Html.LabelFor(model => model.DetallePuesto.SubEspecialidad.DesSubEspecialidad)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.DetallePuesto.SubEspecialidad.DesSubEspecialidad, new { @class = "form-control", @id = "codsubespecialidad", @readonly = false })
                                @Html.HiddenFor(model => model.DetallePuesto.SubEspecialidad.DesSubEspecialidad)
                                @Html.HiddenFor(model => model.DetallePuesto.SubEspecialidad.IdEntidad)
                            </td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-warning" id="DialogOcupacion" title="Editar ocupación real"><i class="fa fa-pencil-square-o"></i></button> <b>@Html.LabelFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal, new { @class = "form-control", @id = "codocupacion", @readonly = false })
                                @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                                @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.IdEntidad)
                            </td>
                            <td><b>@Html.LabelFor(model => model.Puesto.EstadoPuesto.DesEstadoPuesto)</b></td>
                            <td>
                                @Html.DisplayFor(model => model.Puesto.EstadoPuesto.DesEstadoPuesto)
                                @Html.HiddenFor(model => model.Puesto.EstadoPuesto.DesEstadoPuesto)
                            </td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-warning" id="edit_nivel" title="Editar nivel ocupacional"><i class="fa fa-pencil-square-o"></i></button> <b>Nivel ocupacional</b></td>
                            <td>
                                @Html.DropDownListFor(model => model.NivelSeleccionado, Model.ListaNivelOcupacional, new { @class = "form-control", @id = "txt_nivel", @disabled = true })
                                @Html.HiddenFor(model => model.Puesto.NivelOcupacional)
                            </td>
                            <td><b>@Html.LabelFor(model => model.DetallePuesto.Categoria)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.DetallePuesto.Categoria, new { @class = "form-control", @id = "txt_categoria", @readonly = false })
                                @Html.HiddenFor(model => model.DetallePuesto.Categoria)
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="tabs-2" class="tab-pane fade" role="tabpanel" aria-labelledby="tab2">
                <table class="table table-hover" id="datos_puesto">
                    <thead class="thead-light">
                        <tr>
                            <th colspan="6">Ubicación</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision, new { @class = "form-control", @id = "txt_division", @readonly = false })
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.IdEntidad)
                            </td>
                            <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion, new { @class = "form-control", @id = "txt_direccion", @readonly = false })
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.IdEntidad)
                            </td>
                        </tr>
                        <tr>
                            <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento, new { @class = "form-control", @id = "txt_departamento", @readonly = false })
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.IdEntidad)
                            </td>
                            <td><button type="button" class="btn btn-warning" id="dialog-ubicacion-admin" title="Editar sección"><i class="fa fa-pencil-square-o"></i></button> <b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion, new { @class = "form-control", @id = "codseccion", @readonly = false })
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Seccion.IdEntidad)
                            </td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-warning" id="dialog-presupuesto" title="Editar lugar de contrato"><i class="fa fa-pencil-square-o"></i></button> <b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto, new { @class = "form-control", @id = "codpresupuesto", @readonly = false })
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)
                                @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.IdEntidad)
                            </td>
                            <td></td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-warning" id="edit_contrato" title="Editar lugar de contrato"><i class="fa fa-pencil-square-o"></i></button> <b>Lugar de contrato:</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.UbicacionContrato.Mensaje, new { @class = "form-control", @id = "txt_contrato", @readonly = false })
                                @Html.HiddenFor(model => model.UbicacionContrato.Mensaje)
                            </td>
                            <td><button type="button" class="btn btn-warning" id="edit_trabajo" title="Editar lugar de trabajo"><i class="fa fa-pencil-square-o"></i></button> <b>Lugar de trabajo:</b></td>
                            <td>
                                @Html.TextBoxFor(model => model.UbicacionTrabajo.Mensaje, new { @class = "form-control", @id = "txt_trabajo", @readonly = false })
                                @Html.HiddenFor(model => model.UbicacionTrabajo.Mensaje)
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div><b>@Html.LabelFor(model => model.Puesto.ObservacionesPuesto):</b></div>
<div>@Html.TextAreaFor(model => model.Puesto.ObservacionesPuesto, new { @class = "form-control" })</div>
<br />
<input type="submit" class="btn btn-success" id="btnGuardar" value="Guardar"/>
}


<div class="modal fade" id="buscar-clase" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Búsqueda por Clase</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @{Html.RenderPartial("Clase_Index", new SIRH.Web.Models.ClaseModel()); }
            </div>
            <div class="modal-footer">
                <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="buscar-especialidad" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Búsqueda por Especialidad</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("Especialidad_Index", new SIRH.Web.Models.EspecialidadModel()); }
                </div>
                <div class="modal-footer">
                    <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

<div class="modal fade" id="buscar-ocupacion" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Búsqueda por ocupación real</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("Ocupacion_Index", new SIRH.Web.Models.OcupacionModel()); }
                </div>
                <div class="modal-footer">
                    <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

 <div class="modal fade" id="buscar-subespecialidad" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Búsqueda por subespecialidad</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("Subespecialidad_Index", new SIRH.Web.Models.SubespecialidadModel()); }
                </div>
                <div class="modal-footer">
                    <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
 </div>


<div class="modal fade" id="buscar-ubicacion-admin" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Búsqueda por Sección</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @{Html.RenderPartial("/Views/UbicacionPuesto/Seccion_Index_UbicacionAdministrativa.cshtml", new SIRH.Web.Models.UbicacionAdministrativaModel());}
            </div>
            <div class="modal-footer">
                <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div> 

<div class="modal fade" id="buscar-presupuesto" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Búsqueda por Código Presupuestario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @{Html.RenderPartial("/Views/Funcionario/Presupuesto_Index.cshtml", new SIRH.Web.Models.PresupuestoModel());}
            </div>
            <div class="modal-footer">
                <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div> 



<div class="modal fade" id="buscar-contrato" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Ubicación contrato</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="form-group col-4">
                                    Provincia
                                    <span>:</span>
                                    @Html.DropDownListFor(model => model.ProvinciaContratoSeleccionada, Model.ProvinciasContrato, "Seleccionar...", new { @id = "DropProvinciascontrato", @class = "btn btn-secondary dropdown-toggle form-control", @onchange = "ObtenerCantonesContrato(this.selectedIndex)" })
                                </div>
                                <div class="form-group col-4">
                                    Cantón
                                    <span>:</span>
                                    @Html.DropDownListFor(model => model.CantonContratoSeleccionado, Model.CantonesContrato, "Seleccionar...", new { @id = "DropCantonescontrato", @class = "btn btn-secondary dropdown-toggle form-control", @onchange = "ObtenerDistritosContrato(this.value)" })
                                </div>
                                <div class="form-group col-4">
                                    Distrito
                                    <span>:</span>
                                    @Html.DropDownListFor(model => model.DistritoContratoSeleccionado, Model.DistritosContrato, "Seleccionar...", new { @id = "DropDistritoscontrato", @class = "btn btn-secondary dropdown-toggle form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @Html.ActionLink("Seleccionar", "", "Puesto", null, new { @class = "btn btn-outline-primary", @onclick = "return CargarDatoUbicacionGeografica('contrato');" })
                    <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="buscar-trabajo" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Ubicación trabajo</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="form-group col-4">
                                    Provincia
                                    <span>:</span>
                                    @Html.DropDownListFor(model => model.ProvinciaTrabajoSeleccionada, Model.ProvinciasTrabajo, "Seleccionar...", new { @id = "DropProvinciastrabajo", @class = "btn btn-secondary dropdown-toggle form-control", @onchange = "ObtenerCantonesTrabajo(this.selectedIndex)" })
                                </div>
                                <div class="form-group col-4">
                                    Cantón
                                    <span>:</span>
                                    @Html.DropDownListFor(model => model.CantonTrabajoSeleccionado, Model.CantonesTrabajo, "Seleccionar...", new { @id = "DropCantonestrabajo", @class = "btn btn-secondary dropdown-toggle form-control", @onchange = "ObtenerDistritosTrabajo(this.value)" })
                                </div>
                                <div class="form-group col-4">
                                    Distrito
                                    <span>:</span>
                                    @Html.DropDownListFor(model => model.DistritoTrabajoSeleccionado, Model.DistritosTrabajo, "Seleccionar...", new { @id = "DropDistritostrabajo", @class = "btn btn-secondary dropdown-toggle form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @Html.ActionLink("Seleccionar", "", "Puesto", null, new { @class = "btn btn-outline-primary", @onclick = "return CargarDatoUbicacionGeografica('trabajo');" })
                    <button id="CacelarCalculoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div> 

<script src="~/Scripts/funciones-generales.js" type="text/javascript"></script>
<script src="~/Scripts/Pages/IndexFuncionario.js" type="text/javascript"></script>
<script type="text/javascript" src="~/Scripts/ubicacion-control.js"></script>
<script src="~/Scripts/Pages/FormularioPerfilFuncionario.js" type="text/javascript"></script>
<script src="~/Scripts/puesto-control.js" type="text/javascript"></script>
<script type="text/javascript" src="~/Scripts/funciones-dialogos.js"></script>