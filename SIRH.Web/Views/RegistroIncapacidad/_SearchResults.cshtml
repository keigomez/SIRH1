@model IList<SIRH.Web.ViewModels.FormularioRegistroIncapacidadVM>


@if (Model.Count() > 0)
{
    {
        using (Html.BeginForm("ReporteIncapacidades", "RegistroIncapacidad", FormMethod.Post, new { @id = "thisForm" }))
        {
            <legend>Resultados (@Model.Count)</legend>
            <button class="btn btn-danger" type="submit"><i class="fa fa-file-pdf-o"></i> Exportar a PDF</button>
            <table class="table table-hover">
                <thead class="thead-light">
                    <tr>
                        <th>Cédula</th>
                        <th>Nombre</th>
                        <th>Entidad</th>
                        <th>Tipo</th>
                        <th>Código</th>
                        <th>Estado</th>
                        <th>Fecha Rige</th>
                        <th>Hasta</th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.AttributeEncode(item.Funcionario.Cedula)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Funcionario.Cedula)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Funcionario.Nombre)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Funcionario.PrimerApellido)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Funcionario.SegundoApellido)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Funcionario.SegundoApellido)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.IdEntidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].EntidadMedica.IdEntidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].EntidadMedica.DescripcionEntidadMedica)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Expediente.IdEntidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Expediente.NumeroExpediente)

                                    @*@for (int i = 0; i < item.Incapacidad.Detalles.Count(); i++)
                                        {
                                            @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.Detalles[i].PorSubsidio)
                                            @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.Detalles[i].PorRebaja)
                                            @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.Detalles[i].MtoSalarioDia)
                                            @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.Detalles[i].MtoSubsidio)
                                            @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.Detalles[i].MtoRebaja)
                                        }*@

                                </td>

                                <td>
                                    @item.Funcionario.Nombre @item.Funcionario.PrimerApellido @item.Funcionario.SegundoApellido
                                </td>
                                <td>
                                    @Html.AttributeEncode(item.Incapacidad.TipoIncapacidad.EntidadMedica.DescripcionEntidadMedica)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.TipoIncapacidad.EntidadMedica.DescripcionEntidadMedica)
                                </td>
                                <td>
                                    @Html.AttributeEncode(item.Incapacidad.TipoIncapacidad.DescripcionTipoIncapacidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.TipoIncapacidad.DescripcionTipoIncapacidad)
                                </td>
                                <td>
                                    @Html.AttributeEncode(item.Incapacidad.CodIncapacidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.CodIncapacidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.ObsIncapacidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.MtoSalario)
                                </td>
                                <td>
                                    @Html.AttributeEncode(item.Incapacidad.DetalleEstadoIncapacidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.EstadoIncapacidad)
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.DetalleEstadoIncapacidad)
                                </td>
                                <td>
                                    @Html.AttributeEncode(item.Incapacidad.FecRige.ToShortDateString())
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.FecRige)
                                </td>
                                <td>
                                    @Html.AttributeEncode(item.Incapacidad.FecVence.ToShortDateString())
                                    @Html.HiddenFor(model => model[Model.IndexOf(item)].Incapacidad.FecVence)
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "RegistroIncapacidad", new { @codigo = item.Incapacidad.IdEntidad })" class="btn btn-primary btn-sm">
                                        <i class="fa fa-search"></i> Ver Detalle
                                    </a>
                                </td>
                                @if (item.Incapacidad.EstadoIncapacidad == 1)
                            {
                                    <td>
                                        <a href="@Url.Action("Aprobar", "RegistroIncapacidad", new { @codigo = item.Incapacidad.IdEntidad })" class="btn btn-warning btn-sm">
                                            <i class="fa fa-edit"></i> Aprobar
                                        </a>
                                    </td>
                                    <td>
                                        @*<div class="link_edit">@Html.ActionLink("Registrar Borrador", "Create", new { @codigo = item.Incapacidad.IdEntidad }, new { @class = "btn btn-outline-primary" })</div>*@

                                        <a href="@Url.Action("Edit", "RegistroIncapacidad", new { @codigo = item.Incapacidad.IdEntidad })" class="btn btn-danger btn-sm">
                                            <i class="fa fa-ban"></i> Anular
                                        </a>
                                    </td>
                                }
                            </tr>
                        }
                        <tr>
                            <td colspan="7"></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}
else
{
    <div class="alert alert-danger" role="alert">
        <i class="fa fa-times-circle d-inline" style="font-size:48px;"></i>
        <h4 class="d-inline"> No se encontraron registros en la búsqueda.</h4>
    </div>
    <br />
}