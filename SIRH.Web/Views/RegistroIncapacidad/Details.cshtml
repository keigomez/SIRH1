@model SIRH.Web.ViewModels.FormularioRegistroIncapacidadVM

@{
    ViewBag.Title = "Detalle de Incapacidad";
    Layout = "~/Views/Shared/RegistroIncapacidad.cshtml";
}

<blockquote><h3>Detalle de Incapacidad</h3></blockquote>
<br />
@if (Request.QueryString["accion"] == "guardar")
{
    if (Model.Error == null)
    {
        <div class="alert alert-success" role="alert">
            <i class="fa fa-check-circle d-inline" style="font-size:48px;"></i>
            <h4 class="d-inline"> La Incapacidad se ha guardado correctamente.</h4>
        </div>
        <br />

        <div class="card">
            <h5 class="card-header">Detalles</h5>
            <div class="card-body">
                <div>Se ha almacenado la Incapacidad # <b>@Html.Encode(Model.Incapacidad.IdEntidad)</b> para el funcionario: </div>
                <br /><div><b>@Html.Encode(Model.Funcionario.Cedula) - @Html.Encode(Model.Funcionario.Nombre) @Html.Encode(Model.Funcionario.PrimerApellido) @Html.Encode(Model.Funcionario.SegundoApellido)</b></div>
                <br /><div>Correspondiente al periodo: <b>@Html.Encode(Model.Incapacidad.FecRige.ToShortDateString()) - @Html.Encode(Model.Incapacidad.FecVence.ToShortDateString())</b></div>
                <br /><div>Del tipo de: @Html.AttributeEncode(Model.TipoIncapacidad.DescripcionTipoIncapacidad) </div>
                <br /><div>Emitido por: @Html.AttributeEncode(Model.EntidadMedica.DescripcionEntidadMedica) </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            <i class="fa fa-times-circle d-inline" style="font-size:48px;"></i>
            <h4 class="d-inline"> Ocurrió un error al momento de guardar la incapacidad.</h4>
        </div>
        <br />

        <div class="card">
            <h5 class="card-header">Detalles</h5>
            <div class="card-body">
                <div>La incapacidad no pudo ser guardada debido al siguiente error: </div>
                <br /><div><b>@Html.Encode(Model.Error.MensajeError)</b></div>
                <br /><div>Si conoce la causa de este error, por favor revise los datos que intentó almacenar e intentelo de nuevo.</div>
                <br /><div>De lo contrario le invitamos a ponerse en contacto con nuestro equipo de soporte, mediante el sistema de <a href="http://sisrh.mopt.go.cr:83/" target="_blank">Ayuda y Soporte</a></div>
            </div>
        </div>
    }
}
else
{
    if (Request.QueryString["accion"] == "modificar")
    {
        if (Model.Error == null)
        {
            <div class="alert alert-primary" role="alert">
                <i class="fa fa-exclamation-circle d-inline" style="font-size:48px;"></i>
                <h4 class="d-inline"> La incapacidad se ha anulado.</h4>
            </div>
            <br />
            <div class="card">
                <h5 class="card-header">Detalles</h5>
                <div class="card-body">
                    <div>Se ha anulado la Incapacidad # <b>@Html.Encode(Model.Incapacidad.IdEntidad)</b> para el funcionario: </div>
                    <br /><div><b>@Html.Encode(Model.Funcionario.Cedula) - @Html.Encode(Model.Funcionario.Nombre) @Html.Encode(Model.Funcionario.PrimerApellido) @Html.Encode(Model.Funcionario.SegundoApellido)</b></div>
                    <br /><div>Correspondiente al periodo: <b>@Html.Encode(Model.Incapacidad.FecRige.ToShortDateString()) - @Html.Encode(Model.Incapacidad.FecVence.ToShortDateString())</b></div>
                    <br /><div>Del tipo de: @Html.AttributeEncode(Model.TipoIncapacidad.DescripcionTipoIncapacidad) </div>
                    <br /><div>Emitido por: @Html.AttributeEncode(Model.EntidadMedica.DescripcionEntidadMedica) </div>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-danger" role="alert">
                <i class="fa fa-times-circle d-inline" style="font-size:48px;"></i>
                <h4 class="d-inline"> Ocurrió un error al momento de anular la Incapacidad.</h4>
            </div>
            <br />

            <div class="card">
                <h5 class="card-header">Detalles</h5>
                <div class="card-body">
                    <div>La Incapacidad no pudo ser anulada debido al siguiente error: </div>
                    <br /><div><b>@Html.Encode(Model.Error.MensajeError)</b></div>
                    <br /><div>Si conoce la causa de este error, por favor revise los datos que intentó almacenar e intentelo de nuevo.</div>
                    <br /><div>De lo contrario le invitamos a ponerse en contacto con nuestro equipo de soporte, mediante el sistema de <a href="http://sisrh.mopt.go.cr:83/" target="_blank">Ayuda y Soporte</a></div>
                </div>
            </div>
        }
    }
    else
    {
        if (Request.QueryString["accion"] == "aprobar")
        {
            if (Model.Error == null)
            {
                <div class="alert alert-primary" role="alert">
                    <i class="fa fa-exclamation-circle d-inline" style="font-size:48px;"></i>
                    <h4 class="d-inline"> La incapacidad se ha aprobado.</h4>
                </div>
                <br />
                <div class="card">
                    <h5 class="card-header">Detalles</h5>
                    <div class="card-body">
                        <div>Se ha aprobado la Incapacidad # <b>@Html.Encode(Model.Incapacidad.IdEntidad)</b> para el funcionario: </div>
                        <br /><div><b>@Html.Encode(Model.Funcionario.Cedula) - @Html.Encode(Model.Funcionario.Nombre) @Html.Encode(Model.Funcionario.PrimerApellido) @Html.Encode(Model.Funcionario.SegundoApellido)</b></div>
                        <br /><div>Correspondiente al periodo: <b>@Html.Encode(Model.Incapacidad.FecRige.ToShortDateString()) - @Html.Encode(Model.Incapacidad.FecVence.ToShortDateString())</b></div>
                        <br /><div>Del tipo de: @Html.AttributeEncode(Model.TipoIncapacidad.DescripcionTipoIncapacidad) </div>
                        <br /><div>Emitido por: @Html.AttributeEncode(Model.EntidadMedica.DescripcionEntidadMedica) </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    <i class="fa fa-times-circle d-inline" style="font-size:48px;"></i>
                    <h4 class="d-inline"> Ocurrió un error al momento de aprobado la Incapacidad.</h4>
                </div>
                <br />

                <div class="card">
                    <h5 class="card-header">Detalles</h5>
                    <div class="card-body">
                        <div>La Incapacidad no pudo ser aprobado debido al siguiente error: </div>
                        <br /><div><b>@Html.Encode(Model.Error.MensajeError)</b></div>
                        <br /><div>Si conoce la causa de este error, por favor revise los datos que intentó almacenar e intentelo de nuevo.</div>
                        <br /><div>De lo contrario le invitamos a ponerse en contacto con nuestro equipo de soporte, mediante el sistema de <a href="http://sisrh.mopt.go.cr:83/" target="_blank">Ayuda y Soporte</a></div>
                    </div>
                </div>
            }
        }
        else
        {
            using (Html.BeginForm("ReporteDetalleIncapacidad", "RegistroIncapacidad", FormMethod.Post, new { @id = "thisForm" }))
            {
                <div class="card">
                    <div class="card-header text-left">
                        <b>Incapacidad # @Model.Incapacidad.IdEntidad</b>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <span>
                                    <b>Funcionario: </b> @Model.Funcionario.Cedula - @Model.Funcionario.Nombre @Model.Funcionario.PrimerApellido @Model.Funcionario.SegundoApellido
                                    @Html.HiddenFor(model => model.Funcionario.Cedula)
                                    @Html.HiddenFor(model => model.Funcionario.Nombre)
                                    @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
                                    @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.Label("Núm.Expediente"): </b> @Model.Expediente.NumeroExpediente
                                    @Html.HiddenFor(model => model.Expediente.NumeroExpediente)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.Incapacidad.CodIncapacidad): </b> @Model.Incapacidad.CodIncapacidad
                                    @Html.HiddenFor(model => model.Incapacidad.CodIncapacidad)
                                    @Html.HiddenFor(model => model.Incapacidad.IdEntidad)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.EntidadMedica.DescripcionEntidadMedica): </b>@Model.EntidadMedica.DescripcionEntidadMedica
                                    @Html.HiddenFor(model => model.EntidadMedica.IdEntidad)
                                    @Html.HiddenFor(model => model.EntidadMedica.DescripcionEntidadMedica)
                                    @Html.HiddenFor(model => model.TipoIncapacidad.EntidadMedica.IdEntidad)
                                    @Html.HiddenFor(model => model.TipoIncapacidad.EntidadMedica.DescripcionEntidadMedica)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.TipoIncapacidad.DescripcionTipoIncapacidad): </b>@Model.TipoIncapacidad.DescripcionTipoIncapacidad
                                    @Html.HiddenFor(model => model.TipoIncapacidad.IdEntidad)
                                    @Html.HiddenFor(model => model.TipoIncapacidad.DescripcionTipoIncapacidad)
                                    @Html.HiddenFor(model => model.Incapacidad.TipoIncapacidad.IdEntidad)
                                    @Html.HiddenFor(model => model.Incapacidad.TipoIncapacidad.DescripcionTipoIncapacidad)
                                </span>
                            </li>

                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.Incapacidad.FecRige): </b>@Html.Encode(Model.Incapacidad.FecRige.ToShortDateString())
                                    @Html.HiddenFor(model => model.Incapacidad.FecRige)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.Incapacidad.FecVence): </b>@Html.Encode(Model.Incapacidad.FecVence.ToShortDateString())
                                    @Html.HiddenFor(model => model.Incapacidad.FecVence)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.Incapacidad.DetalleEstadoIncapacidad): </b>@Model.Incapacidad.DetalleEstadoIncapacidad
                                    @Html.HiddenFor(model => model.Incapacidad.DetalleEstadoIncapacidad)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.Incapacidad.ObsIncapacidad): </b>@Model.Incapacidad.ObsIncapacidad
                                    @Html.HiddenFor(model => model.Incapacidad.ObsIncapacidad)
                                </span>
                            </li>
                            <li class="list-group-item">

                                <span>
                                    <b>@Html.LabelFor(model => model.Incapacidad.MtoSalario): </b>@Html.Encode(Model.Incapacidad.MtoSalario.ToString("#,##0.00"))
                                    @Html.HiddenFor(model => model.Incapacidad.MtoSalario)
                                    @Html.HiddenFor(model => model.Incapacidad.MontoTotalSubsidio)
                                    @Html.HiddenFor(model => model.Incapacidad.MontoTotalRebaja)
                                </span>
                            </li>
                        </ul>
                        <br />
                        <table class="table table-hover">
                            <thead class="thead-light">
                                <tr class="text-center">
                                    <th>Día</th>
                                    <th>Por. Subsidio</th>
                                    <th>Mto Subsidio</th>
                                    <th>Por. Rebajo</th>
                                    <th>Mto Rebajo</th>
                                </tr>
                            </thead>
                            <tbody class="text-center">
                                @{
                                    int count = Model.Incapacidad.Detalles.Count;
                                    for (int i = 0; i < count; i++)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(model => model.Incapacidad.Detalles[i].FecRige)
                                                @Html.HiddenFor(model => Model.Incapacidad.Detalles[i].FecRige)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => model.Incapacidad.Detalles[i].PorSubsidio)
                                                @Html.HiddenFor(model => Model.Incapacidad.Detalles[i].PorSubsidio)
                                            </td>
                                            <td>
                                                @Html.Encode(Model.Incapacidad.Detalles[i].MtoSubsidio.ToString("#,##0.00"))
                                                @Html.HiddenFor(model => Model.Incapacidad.Detalles[i].MtoSubsidio)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => model.Incapacidad.Detalles[i].PorRebaja)
                                                @Html.HiddenFor(model => Model.Incapacidad.Detalles[i].PorRebaja)
                                            </td>
                                            <td>
                                                @Html.Encode(Model.Incapacidad.Detalles[i].MtoRebaja.ToString("#,##0.00"))
                                                @Html.HiddenFor(model => Model.Incapacidad.Detalles[i].MtoRebaja)
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td><b>Cantidad de Días: </b> @Html.Encode(count)</td>
                                        <td><b>Total Subsidio</b></td>
                                        <td>
                                            <b>@Html.Encode(Model.Incapacidad.MontoTotalSubsidio.ToString("#,##0.00"))</b>
                                            @Html.HiddenFor(model => Model.Incapacidad.MontoTotalSubsidio)
                                        </td>
                                        <td><b>Total Rebaja</b></td>
                                        <td>
                                            <b> @Html.Encode(Model.Incapacidad.MontoTotalRebaja.ToString("#,##0.00")) </b>
                                            @Html.HiddenFor(model => Model.Incapacidad.MontoTotalRebaja)
                                        </td>
                                    </tr>
                                }

                                @*@{
                                        foreach (var item in Model.Incapacidad.Detalles)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.AttributeEncode(item.FecRige)
                                                    @Html.HiddenFor(model => model.Incapacidad.Detalles.IndexOf(item).FecRige)
                                                </td>
                                            </tr>
                                        }
                                    }*@
                            </tbody>
                        </table>

                        <button class="btn btn-danger" type="submit"><i class="fa fa-file-pdf-o"></i> Exportar a PDF</button>
                        @if (Model.Incapacidad.IdEntidad == 0)
                        {
                            <a href="@Url.Action("Edit", "RegistroIncapacidad", new { @codigo = Model.Incapacidad.IdEntidad })" class="btn btn-warning">
                                <i class="fa fa-pencil-square-o"></i> Editar
                            </a>
                        }
                    </div>
                </div>
            }
        }
    }
}
<br />

<a href="javascript:history.back()" class="btn btn-primary"><i class="fa fa-arrow-circle-left"></i> Regresar</a>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")