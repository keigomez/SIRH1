@model SIRH.Web.ViewModels.PedimentoPuestoVM
<link href="~/Content/datetimepicker.css" rel="stylesheet" />
<div class="card">
    <div class="card-header">
        <strong>Información del Puesto</strong>
    </div>
    <div class="card-body">
        <table class="table" id="datos_funcionario">
            <tr>
                <td colspan="3">
                    @if (Model.Puesto.EstadoPuesto.DesEstadoPuesto.StartsWith("VAC"))
                    {
                        <div class="alert alert-success">
                            <center><strong>Este puesto, actualmente, se encuentra vacante.</strong></center>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <center><strong>Este puesto, actualmente, NO se encuentra vacante.</strong></center>
                        </div>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.CodPuesto): </strong>@Html.DisplayFor(model => model.Puesto.CodPuesto)
                    @Html.HiddenFor(model => model.Puesto.CodPuesto)
                </td>
                <td>
                    <strong>@Html.LabelFor(model => model.DetallePuesto.Clase.DesClase): </strong>@Html.DisplayFor(model => model.DetallePuesto.Clase.DesClase)
                    @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
                </td>
                <td>
                    <strong>@Html.LabelFor(model => model.DetallePuesto.Especialidad.DesEspecialidad): </strong>@Html.DisplayFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                    @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                </td>
            </tr>
            <tr>
                <td>
                    <strong>@Html.LabelFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal): </strong>@Html.DisplayFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                    @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                </td>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                    @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                </td>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                    @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                </td>
            </tr>
            <tr>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                    @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                </td>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                    @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                </td>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)
                    @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)
                </td>
            </tr>
            <tr>
                <td>
                    <strong>@Html.LabelFor(model => model.Puesto.EstadoPuesto.DesEstadoPuesto): </strong>@Html.DisplayFor(model => model.Puesto.EstadoPuesto.DesEstadoPuesto)
                    @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                </td>
                <td>
                    <input type="checkbox" value="Mantener ubicación actual" /> Mantener ubicación actual
                </td>
                <td>

                </td>
            </tr>
            <tr>
                <td colspan="3">
                    @if (Model.Funcionario.Mensaje != null)
                    {
                        <strong>Nota:</strong><div>@Model.Funcionario.Mensaje.ToString()</div>
                    }
                    else
                    {
                        <div>Este puesto actualmente está ocupado por: <strong>@Model.Funcionario.Cedula.ToString() - @Model.Funcionario.Nombre.ToString() @Model.Funcionario.PrimerApellido.ToString() @Model.Funcionario.SegundoApellido.ToString()</strong></div>
                    }
                </td>
            </tr>
        </table>
    </div>
</div>
<br />
@using (Ajax.BeginForm("RegistrarPedimentoPuesto", "Vacantes",
    new AjaxOptions
    {
        HttpMethod = "Post",
        UpdateTargetId = "dvResultadoBusqueda",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "SuccessCargarFuncionario",
        OnComplete = "CompleteCargarFuncionario",
        OnBegin = "BeginCargarFuncionario"
    }))
 {
    <div class="card">
        <h5 class="card-header">Detalle del pedimento de puesto</h5>
        <div class="card-body">
            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.PedimentoPuesto.NumeroPedimento)
                    <span>:</span>
                    @Html.TextBoxFor(model => model.PedimentoPuesto.NumeroPedimento, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.Puesto.CodPuesto)
                </div>
            </div>
            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.PedimentoPuesto.FechaPedimento)
                    <span>:</span>
                    @Html.TextBoxFor(model => model.PedimentoPuesto.FechaPedimento, new { @id = "FechaR", @class = "form-control start_date", @readonly = "readonly", @placeholder = "Fecha de Pedimento" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.PedimentoPuesto.ObservacionesPedimento)
                    <span>:</span>
                    @Html.TextAreaFor(model => model.PedimentoPuesto.ObservacionesPedimento, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-12">
                    <input class="btn btn-success" id="btnGuardarContinuar" name="SubmitButton" type="submit" value="Guardar" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-12">
                    <div id="preloader" class="loader" hidden></div>
                </div>
            </div>
        </div>
    </div>
}

<div id="dvResultadoBusqueda"></div>

@*<script type="text/javascript">
    function mostrar(button)
{
    if (button == 'btnFirst') {
        if (document.getElementById("btnFirst").value == "Sí") {
            document.getElementById("btnFirst").value = "No";
            document.getElementById("divform").style.display = 'inline';
        }
        else {
            document.getElementById("btnFirst").value = "Sí";
            document.getElementById("divform").style.display = 'none';
        }
    } else {
        if (document.getElementById("btnSecond").value == "Sí") {
            document.getElementById("btnSecond").value = "No";
            document.getElementById("divform").style.display = 'inline';
        }
        else {
            document.getElementById("btnSecond").value = "Sí";
            document.getElementById("divform").style.display = 'none';
        }
    }
}
</script>*@

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

<script src="~/Scripts/sidebar.js" type="text/javascript"></script>
@*<script src="~/scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>*@
<script src="~/Scripts/datetimepicker.js" type="text/javascript"></script>
<script src="~/Scripts/datetimepicker-es.js" type="text/javascript"></script>
<script src="~/Scripts/Pages/FormularioPerfilFuncionario.js" type="text/javascript"></script>
