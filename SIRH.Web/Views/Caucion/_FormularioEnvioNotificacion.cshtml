@model SIRH.Web.ViewModels.NotificacionUsuarioVM

@{
    if (Model != null)
    {
        using (Ajax.BeginForm("EnviarNotificacion", new AjaxOptions
        {
            HttpMethod = "POST",
            UpdateTargetId = "formulario",
            InsertionMode = InsertionMode.Replace,
            OnBegin = "BeginGuardarPoliza",
            OnComplete = "CompleteGuardarPoliza",
            OnSuccess = "SuccessGuardarPoliza",
            OnFailure = "SuccessGuardarPoliza"
        }))
        {
@Html.ValidationSummary(true)
<div id="formulario">
    <div class="card">
        <div class="card-header">
            <strong>Información del Funcionario</strong>
        </div>
        <div class="card-body">
            <table class="table table-hover" id="datos_funcionario">
                <tr>
                    <td>
                        <strong>@Html.LabelFor(model => model.Funcionario.Cedula): </strong>@Html.DisplayFor(model => model.Funcionario.Cedula)
                        @Html.HiddenFor(model => model.Funcionario.Cedula)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.Funcionario.Nombre): </strong>@Model.Funcionario.Nombre @Model.Funcionario.PrimerApellido @Model.Funcionario.SegundoApellido
                        @Html.HiddenFor(model => model.Funcionario.Nombre)
                        @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
                        @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.Puesto.CodPuesto): </strong>@Html.DisplayFor(model => model.Puesto.CodPuesto)
                        @Html.HiddenFor(model => model.Puesto.CodPuesto)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>@Html.LabelFor(model => model.DetallePuesto.Clase.DesClase): </strong>@Html.DisplayFor(model => model.DetallePuesto.Clase.DesClase)
                        @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.DetallePuesto.Especialidad.DesEspecialidad): </strong>@Html.DisplayFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                        @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal): </strong>@Html.DisplayFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                        @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Seccion.NomSeccion)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto): </strong>@Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)
                    </td>
                    <td>
                        <strong>@Html.LabelFor(model => model.DetalleContratacion.FechaIngreso): </strong>@Model.DetalleContratacion.FechaIngreso.ToShortDateString()
                        @Html.HiddenFor(model => model.DetalleContratacion.FechaIngreso)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>@Html.LabelFor(model => model.Expediente.NumeroExpediente): </strong>@Html.DisplayFor(model => model.Expediente.NumeroExpediente)
                        @Html.HiddenFor(model => model.Expediente.NumeroExpediente)
                    </td>
                    <td></td>
                    <td></td>
                </tr>
            </table>
        </div>
    </div>
    <br />
    <div class="card">
        <div class="card-header">
            <b>Datos de la Notificación</b>
        </div>
        <div class="card-body">

            <div class="form-group row">
                @Html.LabelFor(model => model.Notificacion.Destinatario, new { @for = "Destinatario", @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Notificacion.Destinatario, new { @id = "Destinatario", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Notificacion.Destinatario)
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.AsuntoSeleccionado, new { @for = "Asunto", @class = "col-sm-2 col-form-label" })
                <div class="col-sm-3">
                    @Html.DropDownListFor(model => model.AsuntoSeleccionado,
                            Model.Asuntos as SelectList,
                            null, new { @id = "Asunto", @class = "form-control" })
                </div>
                @*@Html.LabelFor(model => model.Notificacion.Asunto, new { @for = "Asunto", @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Notificacion.Asunto, new { @id = "Asunto", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Notificacion.Asunto)
                </div>*@
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Notificacion.Contenido, new { @for = "Contenido", @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Notificacion.Contenido, new { @id = "Contenido", @class = "form-control", @rows = "20" })
                    @Html.ValidationMessageFor(model => model.Notificacion.Contenido)
                </div>
            </div>

            <input id="btnGuardar" name="SubmitButton" type="submit" value="Enviar Notificación" class="btn btn-primary float-right" />
            <div id="preloaderGuardar" class="loader float-right" style="display: none"></div>
        </div>
    </div>
    <br />

    @if (!Html.ViewData.ModelState.IsValid)
    {
        <div class="card border-danger">
            <div class="card-header"><strong>El formulario contiene los siguientes errores:</strong></div>
            <div class="card-body text-danger">
                @foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                {
                    <div class="alert alert-danger" role="alert">
                        <h5>@modelError.ErrorMessage</h5>
                    </div>
                }
            </div>
        </div>
    }
</div>
        }
    }
}
<link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>