@model SIRH.Web.ViewModels.FormularioViaticoCorridoVM
@{
    if (Model != null)
    {
        <div class="modal fade" id="modal3" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalCenterTitle">Agregar Motivo</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @{Html.RenderPartial("_AgregarMotivo"); }
                    </div>
                    <div class="modal-footer">
                        <button id="CacelarContratoPopUp" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        <button id="AgregarMotivoPopUp" type="button" class="btn btn-primary">Agregar Motivo</button>
                        <button id="EditarContratoPopUp" type="button" class="btn btn-primary" style="display:none">Editar Contrato</button>
                    </div>
                </div>
            </div>
        </div>

        <b>@Html.LabelFor(model => model.Formulario)</b> <label>@Model.Formulario</label>

        <table class="table table-hover">
            <thead class="thead-light">
                <tr>
                    <th colspan="6">Información del Funcionario</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><b>@Html.LabelFor(model => model.Funcionario.Cedula)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.Funcionario.Cedula)
                        @Html.HiddenFor(model => model.Funcionario.Cedula)
                    <td><b>@Html.LabelFor(model => model.Funcionario.Nombre)</b></td>
                    <td>
                        @Model.Funcionario.Nombre @Model.Funcionario.PrimerApellido @Model.Funcionario.SegundoApellido
                        @Html.HiddenFor(model => model.Funcionario.Nombre)
                        @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
                        @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
                    </td>
                    <td><b>@Html.LabelFor(model => model.Puesto.CodPuesto)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.Puesto.CodPuesto)
                        @Html.HiddenFor(model => model.Puesto.CodPuesto)
                    </td>
                </tr>
                <tr>
                    <td><b>@Html.LabelFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                        @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                    </td>
                    <td><b>@Html.LabelFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                        @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                    </td>
                    <td><b>@Html.LabelFor(model => model.DetallePuesto.Clase.DesClase)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.DetallePuesto.Clase.DesClase)
                        @Html.HiddenFor(model => model.DetallePuesto.Clase.IdEntidad)
                        @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
                    </td>
                </tr>
                <tr>
                    <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                    </td>
                    <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                    </td>
                    <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)</b></td>
                    <td>
                        @Html.DisplayFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                        @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                    </td>
                </tr>
                <tr>
                    <td><b>@Html.LabelFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.CodigoPresupuesto)</b></td>
                    <td>
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <div class="jumbotron" id="Conetedor2">
            @{
                using (Ajax.BeginForm("CreateDeduccionViaticoCorrido", new AjaxOptions
                {
                    HttpMethod = "POST",
                    UpdateTargetId = "Div3",
                    OnBegin = "BeginGuardarDesarraigo",
                    OnComplete = "CompleteGuardarDesarraigo",
                    OnSuccess = "SuccessGuardarDesarraigo",
                    OnFailure = "SuccessGuardarDesarraigo"
                }))
                {
                    Html.ValidationSummary(true);
                     <!--Formulario de Viatico Corrido-->
                    <div id="Div1">
                        <div id="setForm">
                            <!--Se mantienen los datos para no volver a hacer la busqueda-->
                            @Html.HiddenFor(model => model.Funcionario.Nombre)
                            @Html.HiddenFor(model => model.Funcionario.Cedula)
                            @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
                            @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
                            @Html.HiddenFor(model => model.Funcionario.Nombre)
                            @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.Canton.Provincia.NomProvincia)
                            @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.Canton.NomCanton)
                            @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.NomDistrito)
                            @Html.HiddenFor(model => model.UbicacionContrato.Distrito.Canton.Provincia.NomProvincia)
                            @Html.HiddenFor(model => model.UbicacionContrato.Distrito.Canton.NomCanton)
                            @Html.HiddenFor(model => model.UbicacionContrato.Distrito.NomDistrito)
                            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
                            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
                            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
                            @Html.HiddenFor(model => model.Puesto.CodPuesto)
                            @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
                            @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
                            @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
                            @Html.HiddenFor(model => model.ViaticoCorrido.DesSenasDTO)
                            @Html.HiddenFor(model => model.ViaticoCorrido.NumTelDomicilioDTO)
                            @Html.HiddenFor(model => model.ViaticoCorrido.IdEntidad)
                            @Html.HiddenFor(model => model.ViaticoCorrido.PernocteDTO)
                            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.Programa.DesPrograma)
                            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.Area)
                            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.Actividad)
                                                 
                            @Html.TextBoxFor(model => model.ViaticoCorrido.IdEntidad, new { @id = "idViatico", @class = "form-control", @disabled = "disabled", @hidden = "hidden" })      
                            <b><label> Para el mes de: </label></b> @*<label>@Model.mes</label>*@
                            @Html.DropDownListFor(model => model.MesSeleccion, Model.MesesViatico, "Meses", new { @id = "mesDeduccion", @onchange = "ObtenerDetalleDeduccion();", @class = "btn btn-secondary dropdown-toggle" })
                            @Html.ValidationMessageFor(model => model.MesesViatico)
                            <b><label id="lblPagoRealizado"> No se pueden agregar deduciones porque ya se realizó el pago para el mes seleccionado </label></b>
                            <br />

                            <!--Tabla Motivos-->
                            <label>¿Utiliza las cabinas propiedad del MOPT u otros entes públicos o privados?</label>
                            <b>
                                @if (Model.ViaticoCorridoList[0].PernocteDTO != null)
                                {
                                    <label>Sí</label>
                                }
                                else
                                {
                                    <label>No</label>
                                }
                            </b>
                            <!--Almacena los datos de la lista de Motivos-->
                            <div id="MotivosData"></div>
                            <table class="table" id="tablaMotivos" style="margin-bottom:70px;">
                                <thead class="table-active">
                                    <tr class="table-active">
                                        <th colspan="12" class="encabezadoTabla">
                                            Motivos de Deducción
                                            <div style="float:right;"><input class="btn btn-secondary " id="btnAgregarMotivo" type="button" value="+ Agregar Motivo" /></div>
                                        </th>
                                    </tr>
                                    <tr class="table-active">
                                        <th class="encabezadoTablaEspecialRegistro">Motivo</th>
                                        <th class="encabezadoTablaEspecialRegistro">Fecha Rige</th>
                                        <th class="encabezadoTablaEspecialRegistro">Fecha Vence</th>
                                        <th class="encabezadoTablaEspecialRegistro">No.Días</th>
                                        <th class="encabezadoTablaEspecialRegistro">Monto a bajar</th>
                                        <th class="encabezadoTablaEspecialRegistro">Monto a bajar por concepto de cabinas(1)</th>
                                        <th class="encabezadoTablaEspecialRegistro">Total a bajar</th>
                                        <th class="encabezadoTablaEspecialRegistro">No. Acción de Personal</th>
                                        <th class="encabezadoTablaEspecialRegistro"></th>
                                    </tr>
                                </thead>
                                <tbody id="tablaMotivosDetalle"></tbody>
                            </table>

                            <div class="card" style="margin-bottom:20px;">
                                <h5 class="card-header">Observaciones</h5>
                                <div class="card-body">
                                    <center>
                                        <div class="form-group">
                                            @Html.TextAreaFor(model => model.MovimientoVC.ObsObservacionesDTO, new { @class = "form-control", @rows = "5", id = "comment" })
                                            @Html.HiddenFor(model => model.MovimientoVC.ObsObservacionesDTO)
                                            @Html.ValidationMessageFor(model => model.MovimientoVC.ObsObservacionesDTO)
                                        </div>
                                    </center>
                                </div>
                            </div>
                            @if (Model.DetalleD != null)
                            {
                                for (int i = 0; i < Model.DetalleD.Count; i++)
                                {
                                    @Html.HiddenFor(model => model.DetalleD[i].IdEntidad)
                                    @Html.HiddenFor(model => model.DetalleD[i].DesMotivoDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].FecRigeDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].FecVenceDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].NumNoDiaDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].MontMontoBajarDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].MontMontoRebajarDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].TotRebajarDTO)
                                    @Html.HiddenFor(model => model.DetalleD[i].NumSolicitudAccionPDTO)

                                    @Html.ValidationMessageFor(model => model.DetalleD[i].IdEntidad)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].DesMotivoDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].FecRigeDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].FecVenceDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].NumNoDiaDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].MontMontoBajarDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].MontMontoRebajarDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].TotRebajarDTO)
                                    @Html.ValidationMessageFor(model => model.DetalleD[i].NumSolicitudAccionPDTO)
                                }
                            }

                            @Html.HiddenFor(model => model.ViaticoCorridoList[0].IdEntidad)

                            @Html.ValidationMessageFor(model => model.ViaticoCorridoList[0].IdEntidad)

                            <div class="row">
                                <div class="col-2">
                                    <input class="btn btn-info" id="btnGuardar2" name="SubmitButton" type="submit" value="+ Agregar Deducción" onclick="agregarMotivos()" />
                                </div>
                                <div class="col-10">
                                    <div id="preloader1" class="loader" hidden></div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
                
        <!--Errores del formulario-->
        <div id="Div3" style="margin-top:15px;"> </div>
    }
}
