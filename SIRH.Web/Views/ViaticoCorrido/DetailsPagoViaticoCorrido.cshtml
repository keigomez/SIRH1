@model SIRH.Web.ViewModels.FormularioViaticoCorridoVM

@{
    ViewBag.Title = "Detalle de Pago Viático Corrido";
    Layout = "~/Views/Shared/ViaticoCorrido.cshtml";
}

<blockquote><h3>Detalle de Pago de Viático Corrido</h3></blockquote>
<br />

@using (Html.BeginForm("ReporteDetallePagoVC", "ViaticoCorrido", FormMethod.Post, new { @id = "thisForm" }))
{
    if (Request.QueryString["accion"] == "guardar")
    {
        if (Model.Error == null)
        {
             <!--Se mantienen los datos para no volver a hacer la busqueda-->
            @Html.HiddenFor(model => model.Funcionario.Nombre)
            @Html.HiddenFor(model => model.Funcionario.Cedula)
            @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
            @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
            @Html.HiddenFor(model => model.Funcionario.Nombre)
            @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.Canton.Provincia.NomProvincia)
            @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.Canton.NomCanton)
            @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.NomDistrito)
            @Html.HiddenFor(model => model.UbicacionContrato.Distrito.Canton.Provincia.NomProvincia)
            @Html.HiddenFor(model => model.UbicacionContrato.Distrito.Canton.NomCanton)
            @Html.HiddenFor(model => model.UbicacionContrato.Distrito.NomDistrito)
            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Division.NomDivision)
            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.DireccionGeneral.NomDireccion)
            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Departamento.NomDepartamento)
            @Html.HiddenFor(model => model.Puesto.CodPuesto)
            @Html.HiddenFor(model => model.DetallePuesto.Clase.DesClase)
            @Html.HiddenFor(model => model.DetallePuesto.Especialidad.DesEspecialidad)
            @Html.HiddenFor(model => model.DetallePuesto.OcupacionReal.DesOcupacionReal)
            @Html.HiddenFor(model => model.ViaticoCorrido.FecInicioDTO)
            @Html.HiddenFor(model => model.ViaticoCorrido.FecFinDTO)
            @Html.HiddenFor(model => Model.ViaticoCorrido.MontViaticoCorridoDTO)
            @Html.HiddenFor(model => model.ViaticoCorrido.DesSenasDTO)
            @Html.HiddenFor(model => model.ViaticoCorrido.CodigoViaticoCorrido)
            @Html.HiddenFor(model => model.ViaticoCorrido.NombramientoDTO)
            @Html.HiddenFor(model => model.ViaticoCorrido.NumTelDomicilioDTO)
            @Html.HiddenFor(model => model.Direccion.Distrito.IdEntidad)
            @Html.HiddenFor(model => model.Direccion.Distrito.NomDistrito)
            @Html.HiddenFor(model => model.Nombramiento.IdEntidad)
            @Html.HiddenFor(model => model.Nombramiento.EstadoNombramiento)
            @Html.HiddenFor(model => model.Nombramiento.Funcionario)
            @Html.HiddenFor(model => model.Nombramiento.Puesto)
            @Html.HiddenFor(model => model.Nombramiento.FecRige)
            @Html.HiddenFor(model => model.Nombramiento.FecVence)
            @Html.HiddenFor(model => model.NumCartaPresentacion, new { @class = "form-control" })
            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.IdUnidadPresupuestaria)
            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.Area)
            @Html.HiddenFor(model => model.Puesto.UbicacionAdministrativa.Presupuesto.Actividad)
            @Html.HiddenFor(model => model.Eliminacion.FecFinDTO)
            @Html.HiddenFor(model => model.Eliminacion.FecInicioDTO)
            @Html.HiddenFor(model => model.MovimientoViaticoCorrido.IdEntidad)
            @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].FecPago)

            <div class="alert alert-success" role="alert">
                <i class="fa fa-check-circle d-inline" style="font-size:48px;"></i>
                <h4 class="d-inline">El Pago de Viático Corrido se ha guardado correctamente.</h4>
            </div>
            <br />

            <div class="card">
                <h5 class="card-header">Detalles</h5>
                <div class="card-body">
                    <div>Se ha almacenado el Pago de Viático Corrido # <b>@Html.Encode(Model.ViaticoCorrido.CodigoViaticoCorrido)</b> para el funcionario: </div>
                    <br/><div><b>@Html.Encode(Model.Funcionario.Cedula) - @Html.Encode(Model.Funcionario.Nombre) @Html.Encode(Model.Funcionario.PrimerApellido) @Html.Encode(Model.Funcionario.SegundoApellido)</b></div>
                    <br/><div>Monto del Viático: <b>@Html.Encode(Convert.ToDecimal(Model.ViaticoCorrido.MontViaticoCorridoDTO).ToString("#,##0.00"))</b></div>
                    @*<br/><div>Hoja Individualizada: <b>@Html.Encode(Model.ViaticoCorrido.Pagos[0].HojaIndividualizada)</b></div>*@
                    <br/><div>Fecha de Pago: <b>@Html.Encode(Model.ViaticoCorrido.Pagos[0].FecPago.ToShortDateString())</b></div>
                </div>
                <table class="table table-hover">
                    <thead class="thead-light">
                        <tr class="text-center">
                            <th>Día</th>
                            <th>Motivo</th>
                            <th>Mto Rebajo</th>
                        </tr>
                    </thead>
                    <tbody class="text-center">
                        @{
                            int count = Model.ViaticoCorrido.Pagos[0].Detalles.Count;
                            decimal monRebajo = 0;
                            for (int i = 0; i < count; i++)
                            {
                                monRebajo += Model.ViaticoCorrido.Pagos[0].Detalles[i].MonPago;
                                <tr>
                                    <td>
                                        @Html.DisplayFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].FecDiaPago)
                                        @Html.HiddenFor(model => Model.ViaticoCorrido.Pagos[0].Detalles[i].FecDiaPago)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].TipoDetalleDTO.DescripcionTipo)
                                        @Html.HiddenFor(model => Model.ViaticoCorrido.Pagos[0].Detalles[i].TipoDetalleDTO.DescripcionTipo)
                                    </td>
                                    <td>
                                        @Html.Encode(Model.ViaticoCorrido.Pagos[0].Detalles[i].MonPago.ToString("#,##0.00"))
                                        @Html.HiddenFor(model => Model.ViaticoCorrido.Pagos[0].Detalles[i].MonPago)
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td><b>Cantidad de Días Rebajo: </b> @Html.Encode(count)</td>
                                <td></td>
                                <td>
                                    <b class="text-right alert-danger">@Html.Encode(monRebajo.ToString("#,##0.00"))</b>
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td><b>Total a Pagar</b></td>
                                <td>
                                    <b>@Html.Encode(Model.ViaticoCorrido.Pagos[0].MonPago.ToString("#,##0.00"))</b>
                                    @Html.HiddenFor(model => Model.ViaticoCorrido.Pagos[0].MonPago)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <p>
                    <button class="btn btn-danger" type="submit"><i class="fa fa-file-pdf-o"></i> Exportar a PDF</button>
                </p>
            </div>
        }
        else
        {
            <div class="alert alert-danger" role="alert">
                <i class="fa fa-times-circle d-inline" style="font-size:48px;"></i>
                <h4 class="d-inline"> Ocurrió un error al momento de guardar el Pago de Viático Corrido.</h4>
            </div>
            <br />

            <div class="card">
                <h5 class="card-header">Detalles</h5>
                <div class="card-body">
                    <div>El Pago de Viático Corrido no pudo ser guardado debido al siguiente error: </div>
                    <br /><div><b>@Html.Encode(Model.Error.MensajeError)</b></div>
                    <br /><div>Si conoce la causa de este error, por favor revise los datos que intentó almacenar e intentelo de nuevo.</div>
                    <br /><div>De lo contrario le invitamos a ponerse en contacto con nuestro equipo de soporte, mediante el sistema de <a href="http://sisrh.mopt.go.cr:83/" target="_blank">Ayuda y Soporte</a></div>
                </div>
            </div>
        }
    }
    else
    {
        if (Request.QueryString["accion"] == "modificar")
        {
            if (Model.Error == null)
            {
                <div class="alert alert-primary" role="alert">
                    <i class="fa fa-exclamation-circle d-inline" style="font-size:48px;"></i>
                    <h4 class="d-inline">El Pago de Viático Corrido se ha anulado.</h4>
                </div>
                <br />
                <div class="card">
                    <h5 class="card-header">Detalles</h5>
                    <div class="card-body">
                        <div>Se ha anulado el Pago de Viático Corrido # <b>@Html.Encode(Model.ViaticoCorrido.CodigoViaticoCorrido)</b> para el funcionario: </div>
                        <br /><div>Monto del Pago de Viático: <b>@Html.Encode(Model.ViaticoCorrido.Pagos[0].MonPago.ToString("#,##0.00"))</b></div>
                        <br /><div>Fecha de Pago: <b>@Html.Encode(Model.ViaticoCorrido.Pagos[0].FecPago.ToShortDateString())</b></div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    <i class="fa fa-times-circle d-inline" style="font-size:48px;"></i>
                    <h4 class="d-inline"> Ocurrió un error al momento de anular el Pago de Viático Corrido.</h4>
                </div>
                <br />

                <div class="card">
                    <h5 class="card-header">Detalles</h5>
                    <div class="card-body">
                        <div>El Pago de Viático Corrido no pudo ser anulado debido al siguiente error: </div>
                        <br /><div><b>@Html.Encode(Model.Error.MensajeError)</b></div>
                        <br /><div>Si conoce la causa de este error, por favor revise los datos que intentó almacenar e intentelo de nuevo.</div>
                        <br /><div>De lo contrario le invitamos a ponerse en contacto con nuestro equipo de soporte, mediante el sistema de <a href="http://sisrh.mopt.go.cr:83/" target="_blank">Ayuda y Soporte</a></div>
                    </div>
                </div>
            }
        }
        else
        {
            using (Html.BeginForm("ReportePagoViaticoCorrido", "ViaticoCorrido", FormMethod.Post, new { @id = "thisForm" }))
            {
                <div class="card">
                    <div class="card-header text-left">
                        <b>Viático Corrido # @Model.ViaticoCorrido.CodigoViaticoCorrido</b>
                        @Html.HiddenFor(model => model.ViaticoCorrido.CodigoViaticoCorrido)
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <span>
                                    <b>Funcionario: </b> @Model.Funcionario.Cedula - @Model.Funcionario.Nombre @Model.Funcionario.PrimerApellido @Model.Funcionario.SegundoApellido
                                    @Html.HiddenFor(model => model.Funcionario.Cedula)
                                    @Html.HiddenFor(model => model.Funcionario.Nombre)
                                    @Html.HiddenFor(model => model.Funcionario.PrimerApellido)
                                    @Html.HiddenFor(model => model.Funcionario.SegundoApellido)
                                </span>
                            </li>
                            @*<li class="list-group-item">
                                    <span>
                                        <b>@Html.Label("Núm.Expediente"): </b> @Model.Expediente.NumeroExpediente
                                            @Html.HiddenFor(model => model.Expediente.NumeroExpediente)
                                    </span>
                                </li>*@
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.Label("Lugar de Trabajo"): </b>
                                    @Model.UbicacionTrabajo.Distrito.Canton.Provincia.NomProvincia -
                                    @Model.UbicacionTrabajo.Distrito.Canton.NomCanton -
                                    @Model.UbicacionTrabajo.Distrito.NomDistrito
                                    @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.Canton.Provincia.NomProvincia)
                                    @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.Canton.NomCanton)
                                    @Html.HiddenFor(model => model.UbicacionTrabajo.Distrito.NomDistrito)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.Label("Lugar de Contrato"): </b>
                                    @Model.UbicacionContrato.Distrito.Canton.Provincia.NomProvincia -
                                    @Model.UbicacionContrato.Distrito.Canton.NomCanton -
                                    @Model.UbicacionContrato.Distrito.NomDistrito
                                    @Html.HiddenFor(model => model.UbicacionContrato.Distrito.Canton.Provincia.NomProvincia)
                                    @Html.HiddenFor(model => model.UbicacionContrato.Distrito.Canton.NomCanton)
                                    @Html.HiddenFor(model => model.UbicacionContrato.Distrito.NomDistrito)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.Label("Fecha del Viático Corrido:") </b>@Html.Encode(Model.ViaticoCorrido.FecInicioDTO.ToShortDateString()) -
                                    @Html.Encode(Model.ViaticoCorrido.FecFinDTO.ToShortDateString())
                                    @Html.HiddenFor(model => model.ViaticoCorrido.FecInicioDTO)
                                    @Html.HiddenFor(model => model.ViaticoCorrido.FecFinDTO)
                                    @Html.HiddenFor(model => model.ViaticoCorrido.FecPagoDTO)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.ViaticoCorrido.Pagos[0].FecPago): </b>@Model.ViaticoCorrido.Pagos[0].FecPago.ToShortDateString()
                                    @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].FecPago)
                                </span>
                            </li>
                            @*<li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.ViaticoCorrido.Pagos[0].HojaIndividualizada): </b>@Model.ViaticoCorrido.Pagos[0].HojaIndividualizada
                                    @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].HojaIndividualizada)
                                </span>
                            </li>*@
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.ViaticoCorrido.Pagos[0].NumBoleta): </b>@Model.ViaticoCorrido.Pagos[0].NumBoleta
                                    @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].NumBoleta)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.ViaticoCorrido.Pagos[0].ReservaRecurso): </b>@Model.ViaticoCorrido.Pagos[0].ReservaRecurso
                                    @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].ReservaRecurso)
                                </span>
                            <li class="list-group-item">
                                <span>
                                    <b>@Html.LabelFor(model => model.ViaticoCorrido.MontViaticoCorridoDTO): </b>@Html.Encode(Convert.ToDecimal(Model.ViaticoCorrido.MontViaticoCorridoDTO).ToString("#,##0.00"))
                                    @Html.HiddenFor(model => model.ViaticoCorrido.MontViaticoCorridoDTO)
                                </span>
                            </li>
                            @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].IndEstado)
                        </ul>
                        <br />
                        <table class="table table-hover">
                            <thead class="thead-light">
                                <tr class="text-center">
                                    <th>Día</th>
                                    <th>Motivo Rebajo</th>
                                    <th>Mto Rebajo</th>
                                </tr>
                            </thead>
                            <tbody class="text-center">
                                @{
                                    int count = Model.ViaticoCorrido.Pagos[0].Detalles.Count;
                                    decimal monRebajo = 0;

                                    for (int i = 0; i < count; i++)
                                    {
                                        monRebajo += Model.ViaticoCorrido.Pagos[0].Detalles[i].MonPago;
                                        @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].IdEntidad)
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].FecDiaPago)
                                                @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].FecDiaPago)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].TipoDetalleDTO.DescripcionTipo)
                                                @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].TipoDetalleDTO.DescripcionTipo)
                                            </td>
                                            <td>
                                                @Html.Encode(Model.ViaticoCorrido.Pagos[0].Detalles[i].MonPago.ToString("#,##0.00"))
                                                @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].Detalles[i].MonPago)
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td><b>Cantidad de Días Rebajo: </b> @Html.Encode(count)</td>
                                        <td></td>
                                        <td>
                                            <b class="text-right alert-danger">@Html.Encode(monRebajo.ToString("#,##0.00"))</b>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td><b>Total a Pagar</b></td>
                                        <td>
                                            <b>@Html.Encode(Model.ViaticoCorrido.Pagos[0].MonPago.ToString("#,##0.00"))</b>
                                            @Html.HiddenFor(model => model.ViaticoCorrido.Pagos[0].MonPago)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <button class="btn btn-danger" type="submit"><i class="fa fa-file-pdf-o"></i> Exportar a PDF</button>
                        @if (Model.ViaticoCorrido.IdEntidad == 0)
                        {
                            <a href="@Url.Action("Edit", "ViaticoCorrido", new { @codigo = Model.ViaticoCorrido.IdEntidad })" class="btn btn-warning">
                                <i class="fa fa-pencil-square-o"></i> Editar
                            </a>
                        }
                    </div>
                </div>
            }
        }
    }

}
<br />

<a href="javascript:history.back()" class="btn btn-primary"><i class="fa fa-arrow-circle-left"></i> Regresar</a>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")