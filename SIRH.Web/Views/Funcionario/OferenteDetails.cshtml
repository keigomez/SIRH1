@model SIRH.Web.ViewModels.PerfilBasicoFuncionarioVM
@{
    ViewBag.Title = "Detalles del Oferente";
    Layout = "~/Views/Shared/Vacantes.cshtml";
}

<center><h2>Detalle del funcionario / oferente</h2></center>
@{
    if (Model.Error == null)
    {
        if (Request.QueryString["accion"] == "guardar")
        {
            <div class="alert alert-success">
                <i class="fa fa-check-circle"></i> El funcionario / oferente se ha guardado correctamente.
            </div>
        }
        else
        {
            if (Request.QueryString["accion"] == "modificar")
            {
                <div class="alert alert-success">
                    <i class="fa fa-check-circle"></i> El funcionario / oferente se ha guardado correctamente.
                </div>
            }
        }
        <div id="formulario" class="card">
            <div class="card-header">
                <i class="fa fa-user"></i> Información del funcionario / oferente
            </div>
            <div class="card-body">
                <table class="table" id="datos_funcionario">
                    <tr>
                        <td><b>@Html.LabelFor(model => model.Funcionario.Cedula)</b></td>
                        <td class="columna_info">@Html.DisplayFor(model => model.Funcionario.Cedula)</td>
                        @Html.HiddenFor(model => model.Funcionario.Cedula)
                        <td><b>@Html.LabelFor(model => model.Funcionario.Nombre)</b></td>
                        <td class="columna_info">@(Model.Funcionario.Nombre + " " + Model.Funcionario.PrimerApellido + " " + Model.Funcionario.SegundoApellido)</td>
                        <td><b>@Html.LabelFor(model => model.Funcionario.Sexo)</b></td>
                        <td class="columna_info">@Html.DisplayFor(model => model.Funcionario.Sexo)</td>
                    </tr>
                    <tr>
                        <td><b>@Html.LabelFor(model => model.Funcionario.FechaNacimiento)</b></td>
                        <td class="columna_info">@Html.DisplayFor(model => model.Funcionario.FechaNacimiento)</td>
                        <td><b>Edad</b></td>
                        <td class="columna_info">@Html.DisplayFor(model => model.Edad)</td>
                        <td></td>
                        <td class="columna_info"></td>
                    </tr>
                </table>
            </div>
        </div>
        <br />
        @*<div class="card">
            <div class="card-header">
                <i class="fa fa-phone"></i> Información de contacto
            </div>
            <div class="card-body">
                <table id="datos_contacto" class="table">
                        <tr>
                            @if (Model.DatosContacto.FirstOrDefault().Mensaje != null)
                            {
                                <td colspan="6">@Html.LabelFor(model => model.DatosContacto.ElementAt(0).Mensaje)</td>
                                @:</tr> 
                            }
                            else
                            {
                                for (int i = 0; i < Model.DatosContacto.Count(); i++)
                                {
                                    if ((i + 1) % 3 == 0)
                                    {
                                        @:</tr>
                                            <td><b>@Html.DisplayFor(model => model.DatosContacto[i].TipoContacto.DesTipoContacto)</b></td>
                                            <td class="columna_info">@Html.LabelFor(model => model.DatosContacto[i].DesContenido)</td>
                                        @:<tr>
                                    }
                                    else
                                    {
                                        <td><b>@Html.DisplayFor(model => model.DatosContacto[i].TipoContacto.DesTipoContacto)</b></td>
                                        <td class="columna_info">@Html.DisplayFor(model => model.DatosContacto[i].DesContenido)</td>
                                    }
                                }
                            }
                        </tr>
                    </table>
                </div>
        </div>*@

    }
    else
    {
        <div class="alert alert-danger">
            <i class="fa fa-stop-circle"></i> El funcionario / oferente no se pudo guardar.
        </div>

        <fieldset>
            <legend>Detalles</legend>
            
            <div>No se pudieron guardar los datos del funcionario/oferente: </div>
            <br /><div><b>@Model.Error.MensajeError</b></div>
            <br /><div>Si conoce la causa de este error, por favor revise los datos que intentó almacenar e intentelo de nuevo.</div>
        </fieldset>
        <br />
        <p>
            <div class="link_return">
                <a href="javascript:history.back()" id="A2">Regresar</a>
            </div>
        </p>
    }
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script src="~/Scripts/funciones-generales.js" type="text/javascript"></script>
<script src="~/Scripts/sidebar.js" type="text/javascript"></script>
<script src="~/Scripts/Pages/IndexFuncionario.js" type="text/javascript"></script>
<script src="~/scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>