//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIRH.Web.ServicioGeneral {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sisrh.mopt.go.cr:85/", ConfigurationName="ServicioGeneral.ICServiciosGeneralesService")]
    public interface ICServiciosGeneralesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionario", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioRespons" +
            "e")]
        string[] ConsultaFuncionario(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionario", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioRespons" +
            "e")]
        System.Threading.Tasks.Task<string[]> ConsultaFuncionarioAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioClase", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioClaseRe" +
            "sponse")]
        string[] ConsultaFuncionarioClase(string cedula, string clase1, string clase2, string clase3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioClase", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioClaseRe" +
            "sponse")]
        System.Threading.Tasks.Task<string[]> ConsultaFuncionarioClaseAsync(string cedula, string clase1, string clase2, string clase3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "l", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "lResponse")]
        string[] ConsultaFuncionarioPolicial(decimal codPolicial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "l", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "lResponse")]
        System.Threading.Tasks.Task<string[]> ConsultaFuncionarioPolicialAsync(decimal codPolicial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "lCedula", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "lCedulaResponse")]
        bool ConsultaFuncionarioPolicialCedula(decimal codPolicial, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "lCedula", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPolicia" +
            "lCedulaResponse")]
        System.Threading.Tasks.Task<bool> ConsultaFuncionarioPolicialCedulaAsync(decimal codPolicial, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioNombre", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioNombreR" +
            "esponse")]
        string[][] ConsultaFuncionarioNombre(string apellido1, string apellido2, int titP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioNombre", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioNombreR" +
            "esponse")]
        System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioNombreAsync(string apellido1, string apellido2, int titP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionariosDirecc" +
            "ion", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionariosDirecc" +
            "ionResponse")]
        string[][] ConsultaFuncionariosDireccion(int codDireccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionariosDirecc" +
            "ion", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionariosDirecc" +
            "ionResponse")]
        System.Threading.Tasks.Task<string[][]> ConsultaFuncionariosDireccionAsync(int codDireccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaExFuncionarios", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaExFuncionariosResp" +
            "onse")]
        string[][] ConsultaExFuncionarios(int mes, int anio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaExFuncionarios", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaExFuncionariosResp" +
            "onse")]
        System.Threading.Tasks.Task<string[][]> ConsultaExFuncionariosAsync(int mes, int anio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioCalific" +
            "aciones", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioCalific" +
            "acionesResponse")]
        string[][] ConsultaFuncionarioCalificaciones(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioCalific" +
            "aciones", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioCalific" +
            "acionesResponse")]
        System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioCalificacionesAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioAccionP" +
            "ersonal", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioAccionP" +
            "ersonalResponse")]
        string[][] ConsultaFuncionarioAccionPersonal(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioAccionP" +
            "ersonal", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioAccionP" +
            "ersonalResponse")]
        System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioAccionPersonalAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "SinSalario", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "SinSalarioResponse")]
        string[][] ConsultaFuncionarioPermisoSinSalario(System.DateTime FechaInicial, System.DateTime FechaFinal, bool MenosMes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "SinSalario", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "SinSalarioResponse")]
        System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioPermisoSinSalarioAsync(System.DateTime FechaInicial, System.DateTime FechaFinal, bool MenosMes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "Vacaciones", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "VacacionesResponse")]
        string[][] ConsultaFuncionarioPermisoVacaciones(System.DateTime FechaInicial, System.DateTime FechaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "Vacaciones", ReplyAction="http://sisrh.mopt.go.cr:85/ICServiciosGeneralesService/ConsultaFuncionarioPermiso" +
            "VacacionesResponse")]
        System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioPermisoVacacionesAsync(System.DateTime FechaInicial, System.DateTime FechaFinal);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICServiciosGeneralesServiceChannel : SIRH.Web.ServicioGeneral.ICServiciosGeneralesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CServiciosGeneralesServiceClient : System.ServiceModel.ClientBase<SIRH.Web.ServicioGeneral.ICServiciosGeneralesService>, SIRH.Web.ServicioGeneral.ICServiciosGeneralesService {
        
        public CServiciosGeneralesServiceClient() {
        }
        
        public CServiciosGeneralesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CServiciosGeneralesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CServiciosGeneralesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CServiciosGeneralesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] ConsultaFuncionario(string cedula) {
            return base.Channel.ConsultaFuncionario(cedula);
        }
        
        public System.Threading.Tasks.Task<string[]> ConsultaFuncionarioAsync(string cedula) {
            return base.Channel.ConsultaFuncionarioAsync(cedula);
        }
        
        public string[] ConsultaFuncionarioClase(string cedula, string clase1, string clase2, string clase3) {
            return base.Channel.ConsultaFuncionarioClase(cedula, clase1, clase2, clase3);
        }
        
        public System.Threading.Tasks.Task<string[]> ConsultaFuncionarioClaseAsync(string cedula, string clase1, string clase2, string clase3) {
            return base.Channel.ConsultaFuncionarioClaseAsync(cedula, clase1, clase2, clase3);
        }
        
        public string[] ConsultaFuncionarioPolicial(decimal codPolicial) {
            return base.Channel.ConsultaFuncionarioPolicial(codPolicial);
        }
        
        public System.Threading.Tasks.Task<string[]> ConsultaFuncionarioPolicialAsync(decimal codPolicial) {
            return base.Channel.ConsultaFuncionarioPolicialAsync(codPolicial);
        }
        
        public bool ConsultaFuncionarioPolicialCedula(decimal codPolicial, string cedula) {
            return base.Channel.ConsultaFuncionarioPolicialCedula(codPolicial, cedula);
        }
        
        public System.Threading.Tasks.Task<bool> ConsultaFuncionarioPolicialCedulaAsync(decimal codPolicial, string cedula) {
            return base.Channel.ConsultaFuncionarioPolicialCedulaAsync(codPolicial, cedula);
        }
        
        public string[][] ConsultaFuncionarioNombre(string apellido1, string apellido2, int titP) {
            return base.Channel.ConsultaFuncionarioNombre(apellido1, apellido2, titP);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioNombreAsync(string apellido1, string apellido2, int titP) {
            return base.Channel.ConsultaFuncionarioNombreAsync(apellido1, apellido2, titP);
        }
        
        public string[][] ConsultaFuncionariosDireccion(int codDireccion) {
            return base.Channel.ConsultaFuncionariosDireccion(codDireccion);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaFuncionariosDireccionAsync(int codDireccion) {
            return base.Channel.ConsultaFuncionariosDireccionAsync(codDireccion);
        }
        
        public string[][] ConsultaExFuncionarios(int mes, int anio) {
            return base.Channel.ConsultaExFuncionarios(mes, anio);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaExFuncionariosAsync(int mes, int anio) {
            return base.Channel.ConsultaExFuncionariosAsync(mes, anio);
        }
        
        public string[][] ConsultaFuncionarioCalificaciones(string cedula) {
            return base.Channel.ConsultaFuncionarioCalificaciones(cedula);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioCalificacionesAsync(string cedula) {
            return base.Channel.ConsultaFuncionarioCalificacionesAsync(cedula);
        }
        
        public string[][] ConsultaFuncionarioAccionPersonal(string cedula) {
            return base.Channel.ConsultaFuncionarioAccionPersonal(cedula);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioAccionPersonalAsync(string cedula) {
            return base.Channel.ConsultaFuncionarioAccionPersonalAsync(cedula);
        }
        
        public string[][] ConsultaFuncionarioPermisoSinSalario(System.DateTime FechaInicial, System.DateTime FechaFinal, bool MenosMes) {
            return base.Channel.ConsultaFuncionarioPermisoSinSalario(FechaInicial, FechaFinal, MenosMes);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioPermisoSinSalarioAsync(System.DateTime FechaInicial, System.DateTime FechaFinal, bool MenosMes) {
            return base.Channel.ConsultaFuncionarioPermisoSinSalarioAsync(FechaInicial, FechaFinal, MenosMes);
        }
        
        public string[][] ConsultaFuncionarioPermisoVacaciones(System.DateTime FechaInicial, System.DateTime FechaFinal) {
            return base.Channel.ConsultaFuncionarioPermisoVacaciones(FechaInicial, FechaFinal);
        }
        
        public System.Threading.Tasks.Task<string[][]> ConsultaFuncionarioPermisoVacacionesAsync(System.DateTime FechaInicial, System.DateTime FechaFinal) {
            return base.Channel.ConsultaFuncionarioPermisoVacacionesAsync(FechaInicial, FechaFinal);
        }
    }
}
