

//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace SIRH.Datos
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class SIRHEntities : DbContext
{
    public SIRHEntities()
        : base("name=SIRHEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<C_AUX_DetallePagoGasto> C_AUX_DetallePagoGasto { get; set; }

    public DbSet<C_AUX_DetallePagoViatico> C_AUX_DetallePagoViatico { get; set; }

    public DbSet<C_EMU_AccionPersonal> C_EMU_AccionPersonal { get; set; }

    public DbSet<C_EMU_Calificacion> C_EMU_Calificacion { get; set; }

    public DbSet<C_EMU_CarreraProfesional> C_EMU_CarreraProfesional { get; set; }

    public DbSet<C_EMU_Cursos> C_EMU_Cursos { get; set; }

    public DbSet<C_EMU_HistoricoPlanilla_oldie> C_EMU_HistoricoPlanilla_oldie { get; set; }

    public DbSet<C_EMU_Puntos> C_EMU_Puntos { get; set; }

    public DbSet<C_EMU_Vacaciones_Movimiento> C_EMU_Vacaciones_Movimiento { get; set; }

    public DbSet<C_EMU_Vacaciones_Saldo> C_EMU_Vacaciones_Saldo { get; set; }

    public DbSet<C_ViaticoCorrido> C_ViaticoCorrido { get; set; }

    public DbSet<AccionPersonal> AccionPersonal { get; set; }

    public DbSet<ActividadFuncionario> ActividadFuncionario { get; set; }

    public DbSet<ActividadMeta> ActividadMeta { get; set; }

    public DbSet<ActividadResultadoCargo> ActividadResultadoCargo { get; set; }

    public DbSet<AddendumPrestamoPuesto> AddendumPrestamoPuesto { get; set; }

    public DbSet<BitacoraIncidencia> BitacoraIncidencia { get; set; }

    public DbSet<BitacoraUsuario> BitacoraUsuario { get; set; }

    public DbSet<BoletaPrestamo> BoletaPrestamo { get; set; }

    public DbSet<BorradorAccionPersonal> BorradorAccionPersonal { get; set; }

    public DbSet<BotAccionIncidencia> BotAccionIncidencia { get; set; }

    public DbSet<Calificacion> Calificacion { get; set; }

    public DbSet<CalificacionCapacitacion> CalificacionCapacitacion { get; set; }

    public DbSet<CalificacionEncargado> CalificacionEncargado { get; set; }

    public DbSet<CalificacionNombramiento> CalificacionNombramiento { get; set; }

    public DbSet<CalificacionNombramientoFuncionarios> CalificacionNombramientoFuncionarios { get; set; }

    public DbSet<CalificacionObservaciones> CalificacionObservaciones { get; set; }

    public DbSet<CalificacionReglaTecnica> CalificacionReglaTecnica { get; set; }

    public DbSet<CambioPorAccionPersonal> CambioPorAccionPersonal { get; set; }

    public DbSet<Canton> Canton { get; set; }

    public DbSet<CaracteristicasPuesto> CaracteristicasPuesto { get; set; }

    public DbSet<Cargo> Cargo { get; set; }

    public DbSet<CartasPresentacion> CartasPresentacion { get; set; }

    public DbSet<CatalogoDeduccion> CatalogoDeduccion { get; set; }

    public DbSet<CatalogoDia> CatalogoDia { get; set; }

    public DbSet<CatalogoIncidencia> CatalogoIncidencia { get; set; }

    public DbSet<CatalogoPregunta> CatalogoPregunta { get; set; }

    public DbSet<CatalogoRemuneracion> CatalogoRemuneracion { get; set; }

    public DbSet<CatAnioAccionPersonal> CatAnioAccionPersonal { get; set; }

    public DbSet<CatAnioBoletaPrestamo> CatAnioBoletaPrestamo { get; set; }

    public DbSet<CatCampo> CatCampo { get; set; }

    public DbSet<CatDiaViaticoGasto> CatDiaViaticoGasto { get; set; }

    public DbSet<CatEstadoCivil> CatEstadoCivil { get; set; }

    public DbSet<CatMetaEstado> CatMetaEstado { get; set; }

    public DbSet<CatMetaPrioridad> CatMetaPrioridad { get; set; }

    public DbSet<CatMovimientoPresupuesto> CatMovimientoPresupuesto { get; set; }

    public DbSet<CatOrdenMovimiento> CatOrdenMovimiento { get; set; }

    public DbSet<CatPermiso> CatPermiso { get; set; }

    public DbSet<CatPermisoEvidencia> CatPermisoEvidencia { get; set; }

    public DbSet<Caucion> Caucion { get; set; }

    public DbSet<Clase> Clase { get; set; }

    public DbSet<CompetenciaGrupoOcupacional> CompetenciaGrupoOcupacional { get; set; }

    public DbSet<CompetenciaTransversalCargo> CompetenciaTransversalCargo { get; set; }

    public DbSet<ComponentePresupuestario> ComponentePresupuestario { get; set; }

    public DbSet<ComponenteSalarial> ComponenteSalarial { get; set; }

    public DbSet<ComportamientoGrupoOcupacional> ComportamientoGrupoOcupacional { get; set; }

    public DbSet<ComportamientoTransversal> ComportamientoTransversal { get; set; }

    public DbSet<ContenidoPresupuestario> ContenidoPresupuestario { get; set; }

    public DbSet<ContratoArrendamiento> ContratoArrendamiento { get; set; }

    public DbSet<CuentaBancaria> CuentaBancaria { get; set; }

    public DbSet<CursoCapacitacion> CursoCapacitacion { get; set; }

    public DbSet<CursoGrado> CursoGrado { get; set; }

    public DbSet<Decreto> Decreto { get; set; }

    public DbSet<DeduccionEfectuada> DeduccionEfectuada { get; set; }

    public DbSet<DeduccionTemporal> DeduccionTemporal { get; set; }

    public DbSet<Departamento> Departamento { get; set; }

    public DbSet<Desarraigo> Desarraigo { get; set; }

    public DbSet<DesgloseSalarial> DesgloseSalarial { get; set; }

    public DbSet<DetalleAcceso> DetalleAcceso { get; set; }

    public DbSet<DetalleAccionPersonal> DetalleAccionPersonal { get; set; }

    public DbSet<DetalleAccionPersonalAnterior> DetalleAccionPersonalAnterior { get; set; }

    public DbSet<DetalleAsignacionGastoTransporte> DetalleAsignacionGastoTransporte { get; set; }

    public DbSet<DetalleAsignacionGastoTransporteModificada> DetalleAsignacionGastoTransporteModificada { get; set; }

    public DbSet<DetalleBoleta> DetalleBoleta { get; set; }

    public DbSet<DetalleBorradorAccionPersonal> DetalleBorradorAccionPersonal { get; set; }

    public DbSet<DetalleCalificacion> DetalleCalificacion { get; set; }

    public DbSet<DetalleCalificacionModificada> DetalleCalificacionModificada { get; set; }

    public DbSet<DetalleCalificacionSeguimiento> DetalleCalificacionSeguimiento { get; set; }

    public DbSet<DetalleCambioPedimento> DetalleCambioPedimento { get; set; }

    public DbSet<DetalleContratacion> DetalleContratacion { get; set; }

    public DbSet<DetalleDeduccion> DetalleDeduccion { get; set; }

    public DbSet<DetalleDeduccionGastoTransporte> DetalleDeduccionGastoTransporte { get; set; }

    public DbSet<DetalleDeduccionViaticoCorrido> DetalleDeduccionViaticoCorrido { get; set; }

    public DbSet<DetalleDesarraigoEliminacion> DetalleDesarraigoEliminacion { get; set; }

    public DbSet<DetalleDesgloseSalarial> DetalleDesgloseSalarial { get; set; }

    public DbSet<DetalleEliminacionViaticoCorridoGastoTransporte> DetalleEliminacionViaticoCorridoGastoTransporte { get; set; }

    public DbSet<DetalleIncapacidad> DetalleIncapacidad { get; set; }

    public DbSet<DetallePagoGastoTransporte> DetallePagoGastoTransporte { get; set; }

    public DbSet<DetallePagoViaticoCorrido> DetallePagoViaticoCorrido { get; set; }

    public DbSet<DetallePagoViaticoRetroactivo> DetallePagoViaticoRetroactivo { get; set; }

    public DbSet<DetallePrestacion> DetallePrestacion { get; set; }

    public DbSet<DetallePrestacionAfiliacion> DetallePrestacionAfiliacion { get; set; }

    public DbSet<DetallePrestacionCuadro> DetallePrestacionCuadro { get; set; }

    public DbSet<DetallePuesto> DetallePuesto { get; set; }

    public DbSet<DetallePuestoRubro> DetallePuestoRubro { get; set; }

    public DbSet<DetallePuntosAdicional> DetallePuntosAdicional { get; set; }

    public DbSet<DetalleTiempoExtra> DetalleTiempoExtra { get; set; }

    public DbSet<DiaPagado> DiaPagado { get; set; }

    public DbSet<Direccion> Direccion { get; set; }

    public DbSet<DireccionGeneral> DireccionGeneral { get; set; }

    public DbSet<Distrito> Distrito { get; set; }

    public DbSet<Division> Division { get; set; }

    public DbSet<EjecutorActividad> EjecutorActividad { get; set; }

    public DbSet<EntidadAdscrita> EntidadAdscrita { get; set; }

    public DbSet<EntidadEducativa> EntidadEducativa { get; set; }

    public DbSet<EntidadFinanciera> EntidadFinanciera { get; set; }

    public DbSet<EntidadGubernamental> EntidadGubernamental { get; set; }

    public DbSet<EntidadMedica> EntidadMedica { get; set; }

    public DbSet<EntidadSeguros> EntidadSeguros { get; set; }

    public DbSet<EscalaSalarial> EscalaSalarial { get; set; }

    public DbSet<Especialidad> Especialidad { get; set; }

    public DbSet<EstadoBorrador> EstadoBorrador { get; set; }

    public DbSet<EstadoDesarraigo> EstadoDesarraigo { get; set; }

    public DbSet<EstadoFuncionario> EstadoFuncionario { get; set; }

    public DbSet<EstadoGastoTransporte> EstadoGastoTransporte { get; set; }

    public DbSet<EstadoMovimientoPuesto> EstadoMovimientoPuesto { get; set; }

    public DbSet<EstadoNombramiento> EstadoNombramiento { get; set; }

    public DbSet<EstadoOrdenMovimiento> EstadoOrdenMovimiento { get; set; }

    public DbSet<EstadoPedimento> EstadoPedimento { get; set; }

    public DbSet<EstadoPuesto> EstadoPuesto { get; set; }

    public DbSet<EstadoTipoJornada> EstadoTipoJornada { get; set; }

    public DbSet<EstadoTramite> EstadoTramite { get; set; }

    public DbSet<EstadoViaticoCorrido> EstadoViaticoCorrido { get; set; }

    public DbSet<EstudioPuesto> EstudioPuesto { get; set; }

    public DbSet<EvidenciaComportamientoTransversal> EvidenciaComportamientoTransversal { get; set; }

    public DbSet<EvidenciaGrupoOcupacional> EvidenciaGrupoOcupacional { get; set; }

    public DbSet<ExpedienteFuncionario> ExpedienteFuncionario { get; set; }

    public DbSet<ExperienciaProfesional> ExperienciaProfesional { get; set; }

    public DbSet<Factor> Factor { get; set; }

    public DbSet<FactorClasificacionCargo> FactorClasificacionCargo { get; set; }

    public DbSet<FacturaDesarraigo> FacturaDesarraigo { get; set; }

    public DbSet<FamiliaPuestos> FamiliaPuestos { get; set; }

    public DbSet<Folio> Folio { get; set; }

    public DbSet<FormacionAcademica> FormacionAcademica { get; set; }

    public DbSet<Funcionario> Funcionario { get; set; }

    public DbSet<GastoTransporte> GastoTransporte { get; set; }

    public DbSet<GastoTransporteReintegroDias> GastoTransporteReintegroDias { get; set; }

    public DbSet<GastoTransporteRutas> GastoTransporteRutas { get; set; }

    public DbSet<HistorialEstadoCivil> HistorialEstadoCivil { get; set; }

    public DbSet<Incidencia> Incidencia { get; set; }

    public DbSet<InformacionContacto> InformacionContacto { get; set; }

    public DbSet<MetaIndividualCalificacion> MetaIndividualCalificacion { get; set; }

    public DbSet<MetaIndividualEvidencia> MetaIndividualEvidencia { get; set; }

    public DbSet<MetaIndividualInforme> MetaIndividualInforme { get; set; }

    public DbSet<MetaObjetivoCalificacion> MetaObjetivoCalificacion { get; set; }

    public DbSet<MetaObjetivoInstitucional> MetaObjetivoInstitucional { get; set; }

    public DbSet<Modalidad> Modalidad { get; set; }

    public DbSet<MontoCaucion> MontoCaucion { get; set; }

    public DbSet<MotivoMovimiento> MotivoMovimiento { get; set; }

    public DbSet<MotivoPedimento> MotivoPedimento { get; set; }

    public DbSet<MovimientoBorradorAccionPersonal> MovimientoBorradorAccionPersonal { get; set; }

    public DbSet<MovimientoGastoTransporte> MovimientoGastoTransporte { get; set; }

    public DbSet<MovimientoPuesto> MovimientoPuesto { get; set; }

    public DbSet<MovimientoViaticoCorrido> MovimientoViaticoCorrido { get; set; }

    public DbSet<Nombramiento> Nombramiento { get; set; }

    public DbSet<NotificacionUsuario> NotificacionUsuario { get; set; }

    public DbSet<ObjetivoCalificacion> ObjetivoCalificacion { get; set; }

    public DbSet<ObjetivoInstitucional> ObjetivoInstitucional { get; set; }

    public DbSet<ObjetoGasto> ObjetoGasto { get; set; }

    public DbSet<OcupacionReal> OcupacionReal { get; set; }

    public DbSet<OrdenMovimiento> OrdenMovimiento { get; set; }

    public DbSet<OrdenMovimientoDeclaracion> OrdenMovimientoDeclaracion { get; set; }

    public DbSet<PagoExtraordinario> PagoExtraordinario { get; set; }

    public DbSet<PagoFeriado> PagoFeriado { get; set; }

    public DbSet<PagoGastoTransporte> PagoGastoTransporte { get; set; }

    public DbSet<PagoPrestacion> PagoPrestacion { get; set; }

    public DbSet<PagoViaticoCorrido> PagoViaticoCorrido { get; set; }

    public DbSet<PagoViaticoRetroactivo> PagoViaticoRetroactivo { get; set; }

    public DbSet<Partida> Partida { get; set; }

    public DbSet<PedimentoPuesto> PedimentoPuesto { get; set; }

    public DbSet<Perfil> Perfil { get; set; }

    public DbSet<PerfilAcceso> PerfilAcceso { get; set; }

    public DbSet<PeriodoCalificacion> PeriodoCalificacion { get; set; }

    public DbSet<PeriodoEscalaSalarial> PeriodoEscalaSalarial { get; set; }

    public DbSet<PeriodoVacaciones> PeriodoVacaciones { get; set; }

    public DbSet<PrestacionLegal> PrestacionLegal { get; set; }

    public DbSet<PrestamoPuesto> PrestamoPuesto { get; set; }

    public DbSet<Presupuesto> Presupuesto { get; set; }

    public DbSet<Programa> Programa { get; set; }

    public DbSet<Provincia> Provincia { get; set; }

    public DbSet<Puesto> Puesto { get; set; }

    public DbSet<RegistroIncapacidad> RegistroIncapacidad { get; set; }

    public DbSet<RegistroPrestacionReal> RegistroPrestacionReal { get; set; }

    public DbSet<RegistroTiempoExtra> RegistroTiempoExtra { get; set; }

    public DbSet<RegistroVacaciones> RegistroVacaciones { get; set; }

    public DbSet<ReintegroVacaciones> ReintegroVacaciones { get; set; }

    public DbSet<RelPuestoUbicacion> RelPuestoUbicacion { get; set; }

    public DbSet<RemuneracionEfectuadaPF> RemuneracionEfectuadaPF { get; set; }

    public DbSet<ReporteEstadistico> ReporteEstadistico { get; set; }

    public DbSet<RequerimientoEspecificoCargo> RequerimientoEspecificoCargo { get; set; }

    public DbSet<Rescision> Rescision { get; set; }

    public DbSet<ResolucionPedimento> ResolucionPedimento { get; set; }

    public DbSet<ResultadoCargo> ResultadoCargo { get; set; }

    public DbSet<Seccion> Seccion { get; set; }

    public DbSet<SubEspecialidad> SubEspecialidad { get; set; }

    public DbSet<SubPartida> SubPartida { get; set; }

    public DbSet<sysdiagrams> sysdiagrams { get; set; }

    public DbSet<TareasPuesto> TareasPuesto { get; set; }

    public DbSet<TEMP_EnviarCorreo> TEMP_EnviarCorreo { get; set; }

    public DbSet<TipoAccionPersonal> TipoAccionPersonal { get; set; }

    public DbSet<TipoCambioPorAccionPersonal> TipoCambioPorAccionPersonal { get; set; }

    public DbSet<TipoContacto> TipoContacto { get; set; }

    public DbSet<TipoDeduccion> TipoDeduccion { get; set; }

    public DbSet<TipoDeduccionTemporal> TipoDeduccionTemporal { get; set; }

    public DbSet<TipoDetalleGastoTransporte> TipoDetalleGastoTransporte { get; set; }

    public DbSet<TipoDetallePagoViatico> TipoDetallePagoViatico { get; set; }

    public DbSet<TipoDia> TipoDia { get; set; }

    public DbSet<TipoExtra> TipoExtra { get; set; }

    public DbSet<TipoIncapacidad> TipoIncapacidad { get; set; }

    public DbSet<TipoIndicadorMeta> TipoIndicadorMeta { get; set; }

    public DbSet<TipoJornada> TipoJornada { get; set; }

    public DbSet<TipoPoliticaPublica> TipoPoliticaPublica { get; set; }

    public DbSet<TipoPrestacion> TipoPrestacion { get; set; }

    public DbSet<TipoPrestacionCuadro> TipoPrestacionCuadro { get; set; }

    public DbSet<TipoPuesto> TipoPuesto { get; set; }

    public DbSet<TipoResolucionPedimento> TipoResolucionPedimento { get; set; }

    public DbSet<TipoUbicacion> TipoUbicacion { get; set; }

    public DbSet<TituloFactor> TituloFactor { get; set; }

    public DbSet<Tomo> Tomo { get; set; }

    public DbSet<UbicacionAdministrativa> UbicacionAdministrativa { get; set; }

    public DbSet<UbicacionAsueto> UbicacionAsueto { get; set; }

    public DbSet<UbicacionPuesto> UbicacionPuesto { get; set; }

    public DbSet<Usuario> Usuario { get; set; }

    public DbSet<ViaticoCorrido> ViaticoCorrido { get; set; }

    public DbSet<ViaticoCorridoReintegroDias> ViaticoCorridoReintegroDias { get; set; }

    public DbSet<C_Componentes> C_Componentes { get; set; }

    public DbSet<C_EMU_EXFUNCIONARIOS> C_EMU_EXFUNCIONARIOS { get; set; }

    public DbSet<C_EMU_HistoricoPlanilla> C_EMU_HistoricoPlanilla { get; set; }

    public DbSet<C_funcionariosactivos> C_funcionariosactivos { get; set; }

    public DbSet<C_funcionariosguardia> C_funcionariosguardia { get; set; }

    public DbSet<C_funcionariospendientes> C_funcionariospendientes { get; set; }

    public DbSet<C_InicioPlanilla> C_InicioPlanilla { get; set; }

    public DbSet<C_Nombramiento_Respaldo> C_Nombramiento_Respaldo { get; set; }

    public DbSet<C_PeriodosActualizar> C_PeriodosActualizar { get; set; }

    public DbSet<C_PeriodosBorrar> C_PeriodosBorrar { get; set; }

    public DbSet<C_PeriodosRebaja> C_PeriodosRebaja { get; set; }

    public DbSet<C_Planilla_Anterior> C_Planilla_Anterior { get; set; }

    public DbSet<C_planillacargar> C_planillacargar { get; set; }

    public DbSet<C_RebajoPendientes> C_RebajoPendientes { get; set; }

    public DbSet<C_RespaldoNombramiento> C_RespaldoNombramiento { get; set; }

    public DbSet<C_RespaldoNombramiento20210225> C_RespaldoNombramiento20210225 { get; set; }

    public DbSet<C_RespaldoNombramiento20210303> C_RespaldoNombramiento20210303 { get; set; }

    public DbSet<DecretoComponentePresupuestario> DecretoComponentePresupuestario { get; set; }

    public DbSet<ListaNombramientosActivos> ListaNombramientosActivos { get; set; }

    public DbSet<Mes> Mes { get; set; }

    public DbSet<PLANILLA_SPPP> PLANILLA_SPPP { get; set; }

    public DbSet<Aguinaldo> Aguinaldo { get; set; }


    public virtual int ACTUALIZARNOMBRAMIENTOVACACIONES()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACTUALIZARNOMBRAMIENTOVACACIONES");
    }


    public virtual int REBAJOPENDIENTES()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REBAJOPENDIENTES");
    }


    public virtual int REBAJOPENDIENTESSINPERIODO()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REBAJOPENDIENTESSINPERIODO");
    }


    public virtual int REBAJOVACACIONES()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REBAJOVACACIONES");
    }


    public virtual int REBAJOVACACIONES_FALTANTES()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REBAJOVACACIONES_FALTANTES");
    }


    public virtual int REBAJOVACACIONES_PENDIENTES()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REBAJOVACACIONES_PENDIENTES");
    }


    public virtual ObjectResult<Nullable<int>> SeleccionarObjectID(string entidad)
    {

        var entidadParameter = entidad != null ?
            new ObjectParameter("entidad", entidad) :
            new ObjectParameter("entidad", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SeleccionarObjectID", entidadParameter);
    }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual int UDF_ACTUALIZAR_DATOS_FUNCIONARIO()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UDF_ACTUALIZAR_DATOS_FUNCIONARIO");
    }


    public virtual int USP_ACCION_PERSONAL_AUTOMATICA()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACCION_PERSONAL_AUTOMATICA");
    }


    public virtual ObjectResult<string> USP_ANULAR_ACCION_PERSONAL(Nullable<int> pK_AccionPersonal, string observaciones)
    {

        var pK_AccionPersonalParameter = pK_AccionPersonal.HasValue ?
            new ObjectParameter("PK_AccionPersonal", pK_AccionPersonal) :
            new ObjectParameter("PK_AccionPersonal", typeof(int));


        var observacionesParameter = observaciones != null ?
            new ObjectParameter("Observaciones", observaciones) :
            new ObjectParameter("Observaciones", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_ANULAR_ACCION_PERSONAL", pK_AccionPersonalParameter, observacionesParameter);
    }


    public virtual int USP_CALCULAR_GASTO_PAGO_MES(Nullable<int> iDGasto, Nullable<int> mes, Nullable<int> annio)
    {

        var iDGastoParameter = iDGasto.HasValue ?
            new ObjectParameter("IDGasto", iDGasto) :
            new ObjectParameter("IDGasto", typeof(int));


        var mesParameter = mes.HasValue ?
            new ObjectParameter("Mes", mes) :
            new ObjectParameter("Mes", typeof(int));


        var annioParameter = annio.HasValue ?
            new ObjectParameter("Annio", annio) :
            new ObjectParameter("Annio", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CALCULAR_GASTO_PAGO_MES", iDGastoParameter, mesParameter, annioParameter);
    }


    public virtual ObjectResult<USP_CALCULAR_VIATICO_PAGO_MES_Result> USP_CALCULAR_VIATICO_PAGO_MES(Nullable<int> iDViatico, Nullable<int> mes, Nullable<int> annio)
    {

        var iDViaticoParameter = iDViatico.HasValue ?
            new ObjectParameter("IDViatico", iDViatico) :
            new ObjectParameter("IDViatico", typeof(int));


        var mesParameter = mes.HasValue ?
            new ObjectParameter("Mes", mes) :
            new ObjectParameter("Mes", typeof(int));


        var annioParameter = annio.HasValue ?
            new ObjectParameter("Annio", annio) :
            new ObjectParameter("Annio", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_CALCULAR_VIATICO_PAGO_MES_Result>("USP_CALCULAR_VIATICO_PAGO_MES", iDViaticoParameter, mesParameter, annioParameter);
    }


    public virtual ObjectResult<Nullable<int>> USP_GENERAR_LISTA_CALIFICACION_FUNCIONARIOS(Nullable<int> annio)
    {

        var annioParameter = annio.HasValue ?
            new ObjectParameter("Annio", annio) :
            new ObjectParameter("Annio", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GENERAR_LISTA_CALIFICACION_FUNCIONARIOS", annioParameter);
    }


    public virtual int USP_GENERAR_LISTA_CALIFICACION_REGLA_TECNICA(Nullable<int> periodo)
    {

        var periodoParameter = periodo.HasValue ?
            new ObjectParameter("Periodo", periodo) :
            new ObjectParameter("Periodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GENERAR_LISTA_CALIFICACION_REGLA_TECNICA", periodoParameter);
    }


    public virtual int USP_GENERAR_PLANILLA(Nullable<System.DateTime> fechaPlanilla)
    {

        var fechaPlanillaParameter = fechaPlanilla.HasValue ?
            new ObjectParameter("FechaPlanilla", fechaPlanilla) :
            new ObjectParameter("FechaPlanilla", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GENERAR_PLANILLA", fechaPlanillaParameter);
    }


    public virtual int USP_GENERAR_PLANILLA_MENSUAL()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GENERAR_PLANILLA_MENSUAL");
    }


    public virtual ObjectResult<string> USP_INSERTAR_ACCION_PERSONAL(string anioRige, Nullable<System.DateTime> fecRige, Nullable<System.DateTime> fecVence, Nullable<System.DateTime> fecRigeIntegra, Nullable<System.DateTime> fecVenceIntegra, Nullable<int> fK_TipoAccionPersonal, Nullable<int> fK_Nombramiento, string observaciones, Nullable<int> codModulo, Nullable<int> codObjetoEntidad, Nullable<decimal> indDato)
    {

        var anioRigeParameter = anioRige != null ?
            new ObjectParameter("AnioRige", anioRige) :
            new ObjectParameter("AnioRige", typeof(string));


        var fecRigeParameter = fecRige.HasValue ?
            new ObjectParameter("FecRige", fecRige) :
            new ObjectParameter("FecRige", typeof(System.DateTime));


        var fecVenceParameter = fecVence.HasValue ?
            new ObjectParameter("FecVence", fecVence) :
            new ObjectParameter("FecVence", typeof(System.DateTime));


        var fecRigeIntegraParameter = fecRigeIntegra.HasValue ?
            new ObjectParameter("FecRigeIntegra", fecRigeIntegra) :
            new ObjectParameter("FecRigeIntegra", typeof(System.DateTime));


        var fecVenceIntegraParameter = fecVenceIntegra.HasValue ?
            new ObjectParameter("FecVenceIntegra", fecVenceIntegra) :
            new ObjectParameter("FecVenceIntegra", typeof(System.DateTime));


        var fK_TipoAccionPersonalParameter = fK_TipoAccionPersonal.HasValue ?
            new ObjectParameter("FK_TipoAccionPersonal", fK_TipoAccionPersonal) :
            new ObjectParameter("FK_TipoAccionPersonal", typeof(int));


        var fK_NombramientoParameter = fK_Nombramiento.HasValue ?
            new ObjectParameter("FK_Nombramiento", fK_Nombramiento) :
            new ObjectParameter("FK_Nombramiento", typeof(int));


        var observacionesParameter = observaciones != null ?
            new ObjectParameter("Observaciones", observaciones) :
            new ObjectParameter("Observaciones", typeof(string));


        var codModuloParameter = codModulo.HasValue ?
            new ObjectParameter("CodModulo", codModulo) :
            new ObjectParameter("CodModulo", typeof(int));


        var codObjetoEntidadParameter = codObjetoEntidad.HasValue ?
            new ObjectParameter("CodObjetoEntidad", codObjetoEntidad) :
            new ObjectParameter("CodObjetoEntidad", typeof(int));


        var indDatoParameter = indDato.HasValue ?
            new ObjectParameter("IndDato", indDato) :
            new ObjectParameter("IndDato", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_INSERTAR_ACCION_PERSONAL", anioRigeParameter, fecRigeParameter, fecVenceParameter, fecRigeIntegraParameter, fecVenceIntegraParameter, fK_TipoAccionPersonalParameter, fK_NombramientoParameter, observacionesParameter, codModuloParameter, codObjetoEntidadParameter, indDatoParameter);
    }


    public virtual int USP_INSERTAR_ACCION_PERSONAL_ANTERIOR(Nullable<int> pK_AccionPersonal, Nullable<int> fK_Nombramiento)
    {

        var pK_AccionPersonalParameter = pK_AccionPersonal.HasValue ?
            new ObjectParameter("PK_AccionPersonal", pK_AccionPersonal) :
            new ObjectParameter("PK_AccionPersonal", typeof(int));


        var fK_NombramientoParameter = fK_Nombramiento.HasValue ?
            new ObjectParameter("FK_Nombramiento", fK_Nombramiento) :
            new ObjectParameter("FK_Nombramiento", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERTAR_ACCION_PERSONAL_ANTERIOR", pK_AccionPersonalParameter, fK_NombramientoParameter);
    }


    public virtual int USP_INSERTAR_ACCION_PERSONAL_DETALLE(string numAccion, Nullable<int> fK_Nombramiento, Nullable<int> fK_Clase, Nullable<int> fK_Escala, Nullable<int> codPrograma, Nullable<int> codSeccion, Nullable<int> codEspecialidad, Nullable<int> codSubespecialidad, Nullable<int> numHoras, Nullable<int> numAnualidad, Nullable<decimal> mtoRecargo, Nullable<decimal> mtoGradoGrupo, Nullable<decimal> porProhibicion, Nullable<decimal> mtoOtros)
    {

        var numAccionParameter = numAccion != null ?
            new ObjectParameter("NumAccion", numAccion) :
            new ObjectParameter("NumAccion", typeof(string));


        var fK_NombramientoParameter = fK_Nombramiento.HasValue ?
            new ObjectParameter("FK_Nombramiento", fK_Nombramiento) :
            new ObjectParameter("FK_Nombramiento", typeof(int));


        var fK_ClaseParameter = fK_Clase.HasValue ?
            new ObjectParameter("FK_Clase", fK_Clase) :
            new ObjectParameter("FK_Clase", typeof(int));


        var fK_EscalaParameter = fK_Escala.HasValue ?
            new ObjectParameter("FK_Escala", fK_Escala) :
            new ObjectParameter("FK_Escala", typeof(int));


        var codProgramaParameter = codPrograma.HasValue ?
            new ObjectParameter("CodPrograma", codPrograma) :
            new ObjectParameter("CodPrograma", typeof(int));


        var codSeccionParameter = codSeccion.HasValue ?
            new ObjectParameter("CodSeccion", codSeccion) :
            new ObjectParameter("CodSeccion", typeof(int));


        var codEspecialidadParameter = codEspecialidad.HasValue ?
            new ObjectParameter("CodEspecialidad", codEspecialidad) :
            new ObjectParameter("CodEspecialidad", typeof(int));


        var codSubespecialidadParameter = codSubespecialidad.HasValue ?
            new ObjectParameter("CodSubespecialidad", codSubespecialidad) :
            new ObjectParameter("CodSubespecialidad", typeof(int));


        var numHorasParameter = numHoras.HasValue ?
            new ObjectParameter("NumHoras", numHoras) :
            new ObjectParameter("NumHoras", typeof(int));


        var numAnualidadParameter = numAnualidad.HasValue ?
            new ObjectParameter("NumAnualidad", numAnualidad) :
            new ObjectParameter("NumAnualidad", typeof(int));


        var mtoRecargoParameter = mtoRecargo.HasValue ?
            new ObjectParameter("MtoRecargo", mtoRecargo) :
            new ObjectParameter("MtoRecargo", typeof(decimal));


        var mtoGradoGrupoParameter = mtoGradoGrupo.HasValue ?
            new ObjectParameter("MtoGradoGrupo", mtoGradoGrupo) :
            new ObjectParameter("MtoGradoGrupo", typeof(decimal));


        var porProhibicionParameter = porProhibicion.HasValue ?
            new ObjectParameter("PorProhibicion", porProhibicion) :
            new ObjectParameter("PorProhibicion", typeof(decimal));


        var mtoOtrosParameter = mtoOtros.HasValue ?
            new ObjectParameter("MtoOtros", mtoOtros) :
            new ObjectParameter("MtoOtros", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERTAR_ACCION_PERSONAL_DETALLE", numAccionParameter, fK_NombramientoParameter, fK_ClaseParameter, fK_EscalaParameter, codProgramaParameter, codSeccionParameter, codEspecialidadParameter, codSubespecialidadParameter, numHorasParameter, numAnualidadParameter, mtoRecargoParameter, mtoGradoGrupoParameter, porProhibicionParameter, mtoOtrosParameter);
    }


    public virtual ObjectResult<USP_LISTAR_FUNCIONARIOS_CALIFICACION_Result> USP_LISTAR_FUNCIONARIOS_CALIFICACION(Nullable<int> idPeriodo)
    {

        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("IdPeriodo", idPeriodo) :
            new ObjectParameter("IdPeriodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTAR_FUNCIONARIOS_CALIFICACION_Result>("USP_LISTAR_FUNCIONARIOS_CALIFICACION", idPeriodoParameter);
    }


    public virtual int USP_LISTAR_FUNCIONARIOS_CALIFICACION_JEFATURA(Nullable<int> idPeriodo, string num_Cedula)
    {

        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("IdPeriodo", idPeriodo) :
            new ObjectParameter("IdPeriodo", typeof(int));


        var num_CedulaParameter = num_Cedula != null ?
            new ObjectParameter("Num_Cedula", num_Cedula) :
            new ObjectParameter("Num_Cedula", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LISTAR_FUNCIONARIOS_CALIFICACION_JEFATURA", idPeriodoParameter, num_CedulaParameter);
    }


    public virtual ObjectResult<USP_LISTAR_FUNCIONARIOS_JEFATURA_Result> USP_LISTAR_FUNCIONARIOS_JEFATURA(string num_Cedula)
    {

        var num_CedulaParameter = num_Cedula != null ?
            new ObjectParameter("Num_Cedula", num_Cedula) :
            new ObjectParameter("Num_Cedula", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTAR_FUNCIONARIOS_JEFATURA_Result>("USP_LISTAR_FUNCIONARIOS_JEFATURA", num_CedulaParameter);
    }


    public virtual int USP_LISTAR_NOMBRAMIENTOS_ACTIVOS()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_LISTAR_NOMBRAMIENTOS_ACTIVOS");
    }


    public virtual ObjectResult<USP_OBTENER_ACCION_PERSONAL_PRORROGA_Result> USP_OBTENER_ACCION_PERSONAL_PRORROGA(Nullable<int> fK_TipoAccionPersonal, string num_Cedula)
    {

        var fK_TipoAccionPersonalParameter = fK_TipoAccionPersonal.HasValue ?
            new ObjectParameter("FK_TipoAccionPersonal", fK_TipoAccionPersonal) :
            new ObjectParameter("FK_TipoAccionPersonal", typeof(int));


        var num_CedulaParameter = num_Cedula != null ?
            new ObjectParameter("Num_Cedula", num_Cedula) :
            new ObjectParameter("Num_Cedula", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_ACCION_PERSONAL_PRORROGA_Result>("USP_OBTENER_ACCION_PERSONAL_PRORROGA", fK_TipoAccionPersonalParameter, num_CedulaParameter);
    }


    public virtual ObjectResult<USP_OBTENER_DATOS_CALIFICACION_Result> USP_OBTENER_DATOS_CALIFICACION(Nullable<int> periodo)
    {

        var periodoParameter = periodo.HasValue ?
            new ObjectParameter("Periodo", periodo) :
            new ObjectParameter("Periodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_DATOS_CALIFICACION_Result>("USP_OBTENER_DATOS_CALIFICACION", periodoParameter);
    }


    public virtual ObjectResult<Nullable<System.DateTime>> USP_OBTENER_DIAS_FECHAS(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
    {

        var fechaDesdeParameter = fechaDesde.HasValue ?
            new ObjectParameter("fechaDesde", fechaDesde) :
            new ObjectParameter("fechaDesde", typeof(System.DateTime));


        var fechaHastaParameter = fechaHasta.HasValue ?
            new ObjectParameter("fechaHasta", fechaHasta) :
            new ObjectParameter("fechaHasta", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("USP_OBTENER_DIAS_FECHAS", fechaDesdeParameter, fechaHastaParameter);
    }


    public virtual ObjectResult<USP_OBTENER_JEFATURA_FUNCIONARIO_Result> USP_OBTENER_JEFATURA_FUNCIONARIO(string num_Cedula, Nullable<int> idPeriodo)
    {

        var num_CedulaParameter = num_Cedula != null ?
            new ObjectParameter("Num_Cedula", num_Cedula) :
            new ObjectParameter("Num_Cedula", typeof(string));


        var idPeriodoParameter = idPeriodo.HasValue ?
            new ObjectParameter("idPeriodo", idPeriodo) :
            new ObjectParameter("idPeriodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_JEFATURA_FUNCIONARIO_Result>("USP_OBTENER_JEFATURA_FUNCIONARIO", num_CedulaParameter, idPeriodoParameter);
    }


    public virtual ObjectResult<USP_OBTENER_RESULTADOS_CALIFICACION_Result> USP_OBTENER_RESULTADOS_CALIFICACION(Nullable<int> periodo)
    {

        var periodoParameter = periodo.HasValue ?
            new ObjectParameter("Periodo", periodo) :
            new ObjectParameter("Periodo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENER_RESULTADOS_CALIFICACION_Result>("USP_OBTENER_RESULTADOS_CALIFICACION", periodoParameter);
    }


    public virtual ObjectResult<Nullable<System.DateTime>> USP_VALIDAR_FECHA_RIGE(string fECHARIGE)
    {

        var fECHARIGEParameter = fECHARIGE != null ?
            new ObjectParameter("FECHARIGE", fECHARIGE) :
            new ObjectParameter("FECHARIGE", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("USP_VALIDAR_FECHA_RIGE", fECHARIGEParameter);
    }

}

}

